<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.sap.ai.sdk</groupId>
  <artifactId>sdk-parent</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>SAP AI SDK - Parent POM</name>
  <description>Parent POM for the SAP AI SDK. Defines dependency versions and plugin configurations</description>

  <url>https://github.com/SAP/ai-sdk-java?tab=readme-ov-file#documentation</url>
  <organization>
    <name>SAP SE</name>
    <url>https://www.sap.com</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>SAP</name>
      <email>cloudsdk@sap.com</email>
      <organization>SAP SE</organization>
      <organizationUrl>https://www.sap.com</organizationUrl>
    </developer>
  </developers>

  <modules>
    <module>core</module>
    <module>orchestration</module>
    <module>foundation-models/openai</module>
  </modules>
  <scm>
    <connection/>
    <url/>
  </scm>
  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org</url>
    </repository>
    <snapshotRepository>
      <id>artifactory-snapshots</id>
      <url>https://common.repositories.cloud.sap/artifactory/build-snapshots-cloudsdk</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <project.rootdir>${project.basedir}</project.rootdir>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <maven.compiler.release>17</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <cloud-sdk.version>5.12.0</cloud-sdk.version>
    <junit-jupiter.version>5.11.2</junit-jupiter.version>
    <wiremock.version>3.9.1</wiremock.version>
    <assertj-core.version>3.26.3</assertj-core.version>
    <slf4j.version>2.0.16</slf4j.version>
    <spotless.version>2.43.0</spotless.version>
    <checkstyle.version>10.18.2</checkstyle.version>
    <system-stubs.version>2.1.3</system-stubs.version>
    <surefire.version>3.5.0</surefire.version>
    <system-stubs.version>2.1.3</system-stubs.version>
    <springframework.version>6.1.13</springframework.version>
    <mockito.version>5.14.1</mockito.version>
    <!--  Quality assurance  -->
    <enforcer.skipBanLoggingFrameworks>false</enforcer.skipBanLoggingFrameworks>
    <enforcer.skipEnforceScopeLoggerBridges>false</enforcer.skipEnforceScopeLoggerBridges>
    <enforcer.skipEnforceScopeLombok>false</enforcer.skipEnforceScopeLombok>
    <enforcer.skipBanGeneratedModulesReference>false</enforcer.skipBanGeneratedModulesReference>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.sap.cloud.sdk</groupId>
        <artifactId>sdk-bom</artifactId>
        <version>${cloud-sdk.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- scope "compile" -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${springframework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${springframework.version}</version>
      </dependency>
      <!-- scope "test" -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit-jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${junit-jupiter.version}</version>
      </dependency>
      <dependency>
        <groupId>org.wiremock</groupId>
        <artifactId>wiremock</artifactId>
        <version>${wiremock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj-core.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <!-- Modules BoM -->
      <dependency>
        <groupId>com.sap.ai.sdk</groupId>
        <artifactId>core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sap.ai.sdk</groupId>
        <artifactId>orchestration</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sap.ai.sdk.foundationmodels</groupId>
        <artifactId>openai</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sap.ai.sdk.app</groupId>
        <artifactId>spring-app</artifactId>
        <version>${project.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.4.0</version>
        </plugin>
        <plugin>
          <groupId>com.sap.cloud.sdk.datamodel</groupId>
          <artifactId>openapi-generator-maven-plugin</artifactId>
          <version>${cloud-sdk.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.5.0</version>
        <configuration>
          <fail>true</fail>
        </configuration>
        <executions>
          <execution>
            <id>enforce-project-rules</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <banDistributionManagement/>
                <banDuplicatePomDependencyVersions/>
                <dependencyConvergence/>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>ban-deprecated-dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <message>Do not use deprecated dependencies.</message>
                  <excludes>
                    <exclude>javax.servlet:servlet-api</exclude>
                    <exclude>javax.ws.rs:jsr311-api</exclude>
                    <!--  use javax.ws.rs:javax.ws.rs-api  -->
                    <exclude>commons-httpclient:commons-httpclient</exclude>
                  </excludes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>ban-logging-frameworks</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <skip>${enforcer.skipBanLoggingFrameworks}</skip>
              <rules>
                <bannedDependencies>
                  <message>Do not use and do exclude all transitive uses of logging frameworks.</message>
                  <excludes>
                    <exclude>org.slf4j:slf4j-simple</exclude>
                    <exclude>commons-logging</exclude>
                    <exclude>ch.qos.logback</exclude>
                    <exclude>org.apache.logging.log4j</exclude>
                    <exclude>org.apache.log4j</exclude>
                    <exclude>log4j</exclude>
                    <exclude>org.tinylog</exclude>
                  </excludes>
                  <includes>
                    <include>org.slf4j:slf4j-simple:*:*:test</include>
                  </includes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>enforce-scope-logger-bridges</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <skip>${enforcer.skipEnforceScopeLoggerBridges}</skip>
              <rules>
                <bannedDependencies>
                  <message>Logger bridges must use scope runtime or test.</message>
                  <excludes>
                    <exclude>org.slf4j:jul-to-slf4j</exclude>
                    <exclude>org.slf4j:jcl-over-slf4j</exclude>
                    <exclude>org.slf4j:log4j-over-slf4j</exclude>
                  </excludes>
                  <includes>
                    <include>org.slf4j:jul-to-slf4j:*:*:runtime</include>
                    <include>org.slf4j:jul-to-slf4j:*:*:test</include>
                    <include>org.slf4j:jcl-over-slf4j:*:*:runtime</include>
                    <include>org.slf4j:jcl-over-slf4j:*:*:test</include>
                    <include>org.slf4j:log4j-over-slf4j:*:*:runtime</include>
                    <include>org.slf4j:log4j-over-slf4j:*:*:test</include>
                  </includes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>enforce-scope-lombok</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <skip>${enforcer.skipEnforceScopeLombok}</skip>
              <rules>
                <bannedDependencies>
                  <message>Use lombok with scope provided.</message>
                  <excludes>
                    <exclude>org.projectlombok:lombok</exclude>
                  </excludes>
                  <includes>
                    <include>org.projectlombok:lombok:*:*:provided</include>
                  </includes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>ban-old-junit</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <message>Do not use JUnit 4.X, instead exclusively use Junit Jupiter. JUnit 4 tests will (silently) simply not be executed.</message>
                  <excludes>
                    <exclude>junit:junit</exclude>
                  </excludes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <failOnWarning>true</failOnWarning>
          <failBuild>true</failBuild>
          <ignoreNonCompile>false</ignoreNonCompile>
          <ignoreUnusedRuntime>true</ignoreUnusedRuntime>
          <ignoredUnusedDeclaredDependencies combine.children="append">
            <!--  ignore annotations that are not visible on bytecode level  -->
            <ignoredUnusedDeclaredDependency>com.google.code.findbugs:jsr305</ignoredUnusedDeclaredDependency>
            <!-- Logging API, adapters and default implementation for tests -->
            <ignoredUnusedDeclaredDependency>org.slf4j:slf4j-api</ignoredUnusedDeclaredDependency>
            <ignoredUnusedDeclaredDependency>org.slf4j:jcl-over-slf4j</ignoredUnusedDeclaredDependency>
            <ignoredUnusedDeclaredDependency>org.slf4j:slf4j-simple</ignoredUnusedDeclaredDependency>
            <!-- Lombok usage for code generation -->
            <ignoredUnusedDeclaredDependency>org.projectlombok:lombok</ignoredUnusedDeclaredDependency>
            <!-- By default, JUnit5 adapters are added to every module to ensure no tests are skipped -->
            <ignoredUnusedDeclaredDependency>org.junit.jupiter:junit-jupiter-engine</ignoredUnusedDeclaredDependency>
          </ignoredUnusedDeclaredDependencies>
        </configuration>
        <executions>
          <execution>
            <id>analyze</id>
            <goals>
              <goal>analyze-only</goal>
            </goals>
            <phase>process-test-classes</phase>
          </execution>
          <execution>
            <id>analyze-dep-mgt</id>
            <goals>
              <goal>analyze-dep-mgt</goal>
            </goals>
            <phase>process-test-classes</phase>
          </execution>
          <execution>
            <id>analyze-duplicate</id>
            <goals>
              <goal>analyze-duplicate</goal>
            </goals>
            <phase>process-test-classes</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.version}</version>
        <configuration>
          <java>
            <!-- https://github.com/diffplug/spotless/tree/main/plugin-maven#java -->
            <removeUnusedImports/>
            <googleJavaFormat/>
          </java>
          <pom>
            <!-- https://github.com/diffplug/spotless/tree/main/plugin-maven#maven-pom -->
            <includes>
              <include>**/pom.xml</include>
            </includes>
            <encoding>${project.build.sourceEncoding}</encoding>
            <sortPom>
              <expandEmptyElements>false</expandEmptyElements>
            </sortPom>
          </pom>
        </configuration>
        <executions>
          <execution>
            <!-- compile:apply instead of the default validate:check -->
            <!-- because we want it to run AFTER the OpenAPI generator and FIX (apply) the generated code -->
            <goals>
              <goal>apply</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.5.0</version>
        <configuration>
          <configLocation>.pipeline/checkstyle.xml</configLocation>
          <!-- Exclude generated clients -->
          <suppressionsLocation>.pipeline/checkstyle-suppressions.xml</suppressionsLocation>
          <linkXRef>false</linkXRef>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.25.0</version>
        <configuration>
          <rulesets>
            <ruleset>.pipeline/pmd.xml</ruleset>
            <ruleset>.pipeline/sdk_specific_pmd_rules.xml</ruleset>
            <!-- content of the PMD default rule set for Java can be found here:
https://gitbox.apache.org/repos/asf?p=maven-pmd-plugin.git;a=blob_plain;f=src/main/resources/rulesets/java/maven-pmd-plugin-default.xml;hb=HEAD -->
            <ruleset>/rulesets/java/maven-pmd-plugin-default.xml</ruleset>
          </rulesets>
          <linkXRef>false</linkXRef>
          <targetJdk>${maven.compiler.release}</targetJdk>
          <excludes>
            <!-- Exclude generated clients -->
            <exclude>com/sap/ai/sdk/core/client/**/*</exclude>
            <exclude>com/sap/ai/sdk/orchestration/client/**/*</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>4.8.6.4</version>
        <configuration>
          <includeFilterFile>.pipeline/spotbugs.xml</includeFilterFile>
          <!-- Exclude generated clients -->
          <excludeFilterFile>.pipeline/spotbugs-exclusions.xml</excludeFilterFile>
          <effort>Max</effort>
          <threshold>Low</threshold>
          <maxHeap>2048</maxHeap>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.12</version>
        <configuration>
          <excludes>
            <!-- Exclude generated clients and end to end application from test coverage -->
            <exclude>com/sap/ai/sdk/core/client/**/*</exclude>
            <exclude>com/sap/ai/sdk/orchestration/client/**/*</exclude>
            <exclude>com/sap/ai/sdk/app/**/*</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <!-- Needed because GitHub actions uses an old Maven version <3.9.0 -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>non-release</id>
      <activation>
        <property>
          <name>!release</name>
        </property>
      </activation>
      <modules>
        <module>sample-code/spring-app</module>
      </modules>
    </profile>
    <profile>
      <id>release</id>
      <activation>
        <property>
          <name>release</name>
        </property>
      </activation>
      <!-- Children projects inherit the configuration -->
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-source-plugin</artifactId>
              <version>3.3.1</version>
              <executions>
                <execution>
                  <goals>
                    <goal>jar</goal>
                  </goals>
                  <phase>package</phase>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-maven-plugin</artifactId>
              <version>1.18.20.0</version>
              <configuration>
                <addOutputDirectory>false</addOutputDirectory>
              </configuration>
              <dependencies>
                <dependency>
                  <groupId>org.projectlombok</groupId>
                  <artifactId>lombok</artifactId>
                  <version>1.18.34</version>
                </dependency>
              </dependencies>
              <executions>
                <execution>
                  <id>delombok</id>
                  <goals>
                    <goal>delombok</goal>
                  </goals>
                  <phase>generate-sources</phase>
                  <configuration>
                    <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
                    <outputDirectory>${project.build.directory}/delombok</outputDirectory>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-javadoc-plugin</artifactId>
              <version>3.10.0</version>
              <configuration>
                <quiet>true</quiet>
                <additionalOptions>-Xdoclint:none</additionalOptions>
                <show>protected</show>
                <sourcepath>${project.basedir}/target/delombok</sourcepath>
              </configuration>
              <executions>
                <execution>
                  <id>javadoc-jar</id>
                  <goals>
                    <goal>jar</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-gpg-plugin</artifactId>
              <version>3.2.6</version>
              <executions>
                <execution>
                  <id>sign-artifacts</id>
                  <goals>
                    <goal>sign</goal>
                  </goals>
                  <phase>verify</phase>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-install-plugin</artifactId>
              <version>3.1.3</version>
              <executions>
                <execution>
                  <goals>
                    <goal>install-file</goal>
                  </goals>
                  <phase>install</phase>
                  <configuration>
                    <file>${project.basedir}/target/${project.artifactId}-${project.version}.jar</file>
                    <sources>${project.basedir}/target/${project.artifactId}-${project.version}-sources.jar</sources>
                    <javadoc>${project.basedir}/target/${project.artifactId}-${project.version}-javadoc.jar</javadoc>
                    <pomFile>${project.basedir}/pom.xml</pomFile>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>${project.artifactId}</artifactId>
                    <version>${project.version}</version>
                    <packaging>${project.packaging}</packaging>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-deploy-plugin</artifactId>
              <version>3.1.3</version>
              <executions>
                <execution>
                  <goals>
                    <goal>deploy-file</goal>
                  </goals>
                  <phase>deploy</phase>
                  <configuration>
                    <url>file:./temp_local_repo</url>
                    <repositoryId>local</repositoryId>
                    <file>${project.basedir}/target/${project.artifactId}-${project.version}.jar</file>
                    <sources>${project.basedir}/target/${project.artifactId}-${project.version}-sources.jar</sources>
                    <javadoc>${project.basedir}/target/${project.artifactId}-${project.version}-javadoc.jar</javadoc>
                    <pomFile>${project.basedir}/pom.xml</pomFile>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>${project.artifactId}</artifactId>
                    <version>${project.version}</version>
                    <packaging>${project.packaging}</packaging>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
          </plugin>
          <!-- The plugins configuration below will not be inherited by children projects, they are specific to the parent pom -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-install-plugin</artifactId>
            <inherited>false</inherited>
            <executions>
              <execution>
                <configuration>
                  <file>${project.basedir}/pom.xml</file>
                  <!-- The parent has no sources -->
                  <sources>${empty.property}</sources>
                  <javadoc>${empty.property}</javadoc>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <inherited>false</inherited>
            <executions>
              <execution>
                <configuration>
                  <file>${project.basedir}/pom.xml</file>
                  <!-- The parent has no sources -->
                  <sources>${empty.property}</sources>
                  <javadoc>${empty.property}</javadoc>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
