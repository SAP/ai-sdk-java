/*
 * Internal Orchestration Service API
 * SAP AI Core - Orchestration Service API
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.orchestration.client.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/** GroundingFilter */
// CHECKSTYLE:OFF
public class GroundingFilter
// CHECKSTYLE:ON
{
  @JsonProperty("id")
  private String id;

  @JsonProperty("search_configuration")
  private Object searchConfiguration;

  @JsonProperty("data_repositories")
  private List<String> dataRepositories = new ArrayList<>();

  /** Gets or Sets dataRepositoryType */
  public enum DataRepositoryTypeEnum {
    /** The VECTOR option of this GroundingFilter */
    VECTOR("vector"),

    /** The HELP_SAP_COM option of this GroundingFilter */
    HELP_SAP_COM("help.sap.com");

    private String value;

    DataRepositoryTypeEnum(String value) {
      this.value = value;
    }

    /**
     * Get the value of the enum
     *
     * @return The enum value
     */
    @JsonValue
    @Nonnull
    public String getValue() {
      return value;
    }

    /**
     * Get the String value of the enum value.
     *
     * @return The enum value as String
     */
    @Override
    @Nonnull
    public String toString() {
      return String.valueOf(value);
    }

    /**
     * Get the enum value from a String value
     *
     * @param value The String value
     * @return The enum value of type GroundingFilter
     */
    @JsonCreator
    @Nonnull
    public static DataRepositoryTypeEnum fromValue(@Nonnull final String value) {
      for (DataRepositoryTypeEnum b : DataRepositoryTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  @JsonProperty("data_repository_type")
  private DataRepositoryTypeEnum dataRepositoryType;

  @JsonProperty("data_repository_metadata")
  private List<Object> dataRepositoryMetadata = new ArrayList<>();

  @JsonProperty("document_metadata")
  private List<Object> documentMetadata = new ArrayList<>();

  @JsonProperty("chunk_metadata")
  private List<Object> chunkMetadata = new ArrayList<>();

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  protected GroundingFilter() {}

  /**
   * Set the id of this {@link GroundingFilter} instance and return the same instance.
   *
   * @param id The id of this {@link GroundingFilter}
   * @return The same instance of this {@link GroundingFilter} class
   */
  @Nonnull
  public GroundingFilter id(@Nonnull final String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id The id of this {@link GroundingFilter} instance.
   */
  @Nonnull
  public String getId() {
    return id;
  }

  /**
   * Set the id of this {@link GroundingFilter} instance.
   *
   * @param id The id of this {@link GroundingFilter}
   */
  public void setId(@Nonnull final String id) {
    this.id = id;
  }

  /**
   * Set the searchConfiguration of this {@link GroundingFilter} instance and return the same
   * instance.
   *
   * @param searchConfiguration The searchConfiguration of this {@link GroundingFilter}
   * @return The same instance of this {@link GroundingFilter} class
   */
  @Nonnull
  public GroundingFilter searchConfiguration(@Nonnull final Object searchConfiguration) {
    this.searchConfiguration = searchConfiguration;
    return this;
  }

  /**
   * Get searchConfiguration
   *
   * @return searchConfiguration The searchConfiguration of this {@link GroundingFilter} instance.
   */
  @Nonnull
  public Object getSearchConfiguration() {
    return searchConfiguration;
  }

  /**
   * Set the searchConfiguration of this {@link GroundingFilter} instance.
   *
   * @param searchConfiguration The searchConfiguration of this {@link GroundingFilter}
   */
  public void setSearchConfiguration(@Nonnull final Object searchConfiguration) {
    this.searchConfiguration = searchConfiguration;
  }

  /**
   * Set the dataRepositories of this {@link GroundingFilter} instance and return the same instance.
   *
   * @param dataRepositories The dataRepositories of this {@link GroundingFilter}
   * @return The same instance of this {@link GroundingFilter} class
   */
  @Nonnull
  public GroundingFilter dataRepositories(@Nonnull final List<String> dataRepositories) {
    this.dataRepositories = dataRepositories;
    return this;
  }

  /**
   * Add one dataRepositories instance to this {@link GroundingFilter}.
   *
   * @param dataRepositoriesItem The dataRepositories that should be added
   * @return The same instance of type {@link GroundingFilter}
   */
  @Nonnull
  public GroundingFilter addDataRepositoriesItem(@Nonnull final String dataRepositoriesItem) {
    if (this.dataRepositories == null) {
      this.dataRepositories = new ArrayList<>();
    }
    this.dataRepositories.add(dataRepositoriesItem);
    return this;
  }

  /**
   * Get dataRepositories
   *
   * @return dataRepositories The dataRepositories of this {@link GroundingFilter} instance.
   */
  @Nonnull
  public List<String> getDataRepositories() {
    return dataRepositories;
  }

  /**
   * Set the dataRepositories of this {@link GroundingFilter} instance.
   *
   * @param dataRepositories The dataRepositories of this {@link GroundingFilter}
   */
  public void setDataRepositories(@Nonnull final List<String> dataRepositories) {
    this.dataRepositories = dataRepositories;
  }

  /**
   * Set the dataRepositoryType of this {@link GroundingFilter} instance and return the same
   * instance.
   *
   * @param dataRepositoryType The dataRepositoryType of this {@link GroundingFilter}
   * @return The same instance of this {@link GroundingFilter} class
   */
  @Nonnull
  public GroundingFilter dataRepositoryType(
      @Nonnull final DataRepositoryTypeEnum dataRepositoryType) {
    this.dataRepositoryType = dataRepositoryType;
    return this;
  }

  /**
   * Get dataRepositoryType
   *
   * @return dataRepositoryType The dataRepositoryType of this {@link GroundingFilter} instance.
   */
  @Nonnull
  public DataRepositoryTypeEnum getDataRepositoryType() {
    return dataRepositoryType;
  }

  /**
   * Set the dataRepositoryType of this {@link GroundingFilter} instance.
   *
   * @param dataRepositoryType The dataRepositoryType of this {@link GroundingFilter}
   */
  public void setDataRepositoryType(@Nonnull final DataRepositoryTypeEnum dataRepositoryType) {
    this.dataRepositoryType = dataRepositoryType;
  }

  /**
   * Set the dataRepositoryMetadata of this {@link GroundingFilter} instance and return the same
   * instance.
   *
   * @param dataRepositoryMetadata The dataRepositoryMetadata of this {@link GroundingFilter}
   * @return The same instance of this {@link GroundingFilter} class
   */
  @Nonnull
  public GroundingFilter dataRepositoryMetadata(
      @Nonnull final List<Object> dataRepositoryMetadata) {
    this.dataRepositoryMetadata = dataRepositoryMetadata;
    return this;
  }

  /**
   * Add one dataRepositoryMetadata instance to this {@link GroundingFilter}.
   *
   * @param dataRepositoryMetadataItem The dataRepositoryMetadata that should be added
   * @return The same instance of type {@link GroundingFilter}
   */
  @Nonnull
  public GroundingFilter addDataRepositoryMetadataItem(
      @Nonnull final Object dataRepositoryMetadataItem) {
    if (this.dataRepositoryMetadata == null) {
      this.dataRepositoryMetadata = new ArrayList<>();
    }
    this.dataRepositoryMetadata.add(dataRepositoryMetadataItem);
    return this;
  }

  /**
   * Get dataRepositoryMetadata
   *
   * @return dataRepositoryMetadata The dataRepositoryMetadata of this {@link GroundingFilter}
   *     instance.
   */
  @Nonnull
  public List<Object> getDataRepositoryMetadata() {
    return dataRepositoryMetadata;
  }

  /**
   * Set the dataRepositoryMetadata of this {@link GroundingFilter} instance.
   *
   * @param dataRepositoryMetadata The dataRepositoryMetadata of this {@link GroundingFilter}
   */
  public void setDataRepositoryMetadata(@Nonnull final List<Object> dataRepositoryMetadata) {
    this.dataRepositoryMetadata = dataRepositoryMetadata;
  }

  /**
   * Set the documentMetadata of this {@link GroundingFilter} instance and return the same instance.
   *
   * @param documentMetadata The documentMetadata of this {@link GroundingFilter}
   * @return The same instance of this {@link GroundingFilter} class
   */
  @Nonnull
  public GroundingFilter documentMetadata(@Nonnull final List<Object> documentMetadata) {
    this.documentMetadata = documentMetadata;
    return this;
  }

  /**
   * Add one documentMetadata instance to this {@link GroundingFilter}.
   *
   * @param documentMetadataItem The documentMetadata that should be added
   * @return The same instance of type {@link GroundingFilter}
   */
  @Nonnull
  public GroundingFilter addDocumentMetadataItem(@Nonnull final Object documentMetadataItem) {
    if (this.documentMetadata == null) {
      this.documentMetadata = new ArrayList<>();
    }
    this.documentMetadata.add(documentMetadataItem);
    return this;
  }

  /**
   * Get documentMetadata
   *
   * @return documentMetadata The documentMetadata of this {@link GroundingFilter} instance.
   */
  @Nonnull
  public List<Object> getDocumentMetadata() {
    return documentMetadata;
  }

  /**
   * Set the documentMetadata of this {@link GroundingFilter} instance.
   *
   * @param documentMetadata The documentMetadata of this {@link GroundingFilter}
   */
  public void setDocumentMetadata(@Nonnull final List<Object> documentMetadata) {
    this.documentMetadata = documentMetadata;
  }

  /**
   * Set the chunkMetadata of this {@link GroundingFilter} instance and return the same instance.
   *
   * @param chunkMetadata The chunkMetadata of this {@link GroundingFilter}
   * @return The same instance of this {@link GroundingFilter} class
   */
  @Nonnull
  public GroundingFilter chunkMetadata(@Nonnull final List<Object> chunkMetadata) {
    this.chunkMetadata = chunkMetadata;
    return this;
  }

  /**
   * Add one chunkMetadata instance to this {@link GroundingFilter}.
   *
   * @param chunkMetadataItem The chunkMetadata that should be added
   * @return The same instance of type {@link GroundingFilter}
   */
  @Nonnull
  public GroundingFilter addChunkMetadataItem(@Nonnull final Object chunkMetadataItem) {
    if (this.chunkMetadata == null) {
      this.chunkMetadata = new ArrayList<>();
    }
    this.chunkMetadata.add(chunkMetadataItem);
    return this;
  }

  /**
   * Get chunkMetadata
   *
   * @return chunkMetadata The chunkMetadata of this {@link GroundingFilter} instance.
   */
  @Nonnull
  public List<Object> getChunkMetadata() {
    return chunkMetadata;
  }

  /**
   * Set the chunkMetadata of this {@link GroundingFilter} instance.
   *
   * @param chunkMetadata The chunkMetadata of this {@link GroundingFilter}
   */
  public void setChunkMetadata(@Nonnull final List<Object> chunkMetadata) {
    this.chunkMetadata = chunkMetadata;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link GroundingFilter}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link GroundingFilter} instance.
   *
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException("GroundingFilter has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Set an unrecognizable property of this {@link GroundingFilter} instance. If the map previously
   * contained a mapping for the key, the old value is replaced by the specified value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final GroundingFilter groundingFilter = (GroundingFilter) o;
    return Objects.equals(this.cloudSdkCustomFields, groundingFilter.cloudSdkCustomFields)
        && Objects.equals(this.id, groundingFilter.id)
        && Objects.equals(this.searchConfiguration, groundingFilter.searchConfiguration)
        && Objects.equals(this.dataRepositories, groundingFilter.dataRepositories)
        && Objects.equals(this.dataRepositoryType, groundingFilter.dataRepositoryType)
        && Objects.equals(this.dataRepositoryMetadata, groundingFilter.dataRepositoryMetadata)
        && Objects.equals(this.documentMetadata, groundingFilter.documentMetadata)
        && Objects.equals(this.chunkMetadata, groundingFilter.chunkMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        id,
        searchConfiguration,
        dataRepositories,
        dataRepositoryType,
        dataRepositoryMetadata,
        documentMetadata,
        chunkMetadata,
        cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class GroundingFilter {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    searchConfiguration: ")
        .append(toIndentedString(searchConfiguration))
        .append("\n");
    sb.append("    dataRepositories: ").append(toIndentedString(dataRepositories)).append("\n");
    sb.append("    dataRepositoryType: ").append(toIndentedString(dataRepositoryType)).append("\n");
    sb.append("    dataRepositoryMetadata: ")
        .append(toIndentedString(dataRepositoryMetadata))
        .append("\n");
    sb.append("    documentMetadata: ").append(toIndentedString(documentMetadata)).append("\n");
    sb.append("    chunkMetadata: ").append(toIndentedString(chunkMetadata)).append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /** Create a new {@link GroundingFilter} instance. No arguments are required. */
  public static GroundingFilter create() {
    return new GroundingFilter();
  }
}
