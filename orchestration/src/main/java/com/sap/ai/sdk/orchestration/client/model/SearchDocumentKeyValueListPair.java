/*
 * Internal Orchestration Service API
 * SAP AI Core - Orchestration Service API
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.orchestration.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** SearchDocumentKeyValueListPair */
@JsonPropertyOrder({
  SearchDocumentKeyValueListPair.JSON_PROPERTY_KEY,
  SearchDocumentKeyValueListPair.JSON_PROPERTY_VALUE,
  SearchDocumentKeyValueListPair.JSON_PROPERTY_SELECT_MODE
})
@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.9.0")
public class SearchDocumentKeyValueListPair {
  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public static final String JSON_PROPERTY_VALUE = "value";
  private List<String> value = new ArrayList<>();

  public static final String JSON_PROPERTY_SELECT_MODE = "select_mode";
  private List<SearchSelectOptionEnum> selectMode = new ArrayList<>();

  public SearchDocumentKeyValueListPair() {}

  public SearchDocumentKeyValueListPair key(String key) {

    this.key = key;
    return this;
  }

  /**
   * Get key
   *
   * @return key
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getKey() {
    return key;
  }

  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKey(String key) {
    this.key = key;
  }

  public SearchDocumentKeyValueListPair value(List<String> value) {

    this.value = value;
    return this;
  }

  public SearchDocumentKeyValueListPair addValueItem(String valueItem) {
    if (this.value == null) {
      this.value = new ArrayList<>();
    }
    this.value.add(valueItem);
    return this;
  }

  /**
   * Get value
   *
   * @return value
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<String> getValue() {
    return value;
  }

  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValue(List<String> value) {
    this.value = value;
  }

  public SearchDocumentKeyValueListPair selectMode(List<SearchSelectOptionEnum> selectMode) {

    this.selectMode = selectMode;
    return this;
  }

  public SearchDocumentKeyValueListPair addSelectModeItem(SearchSelectOptionEnum selectModeItem) {
    if (this.selectMode == null) {
      this.selectMode = new ArrayList<>();
    }
    this.selectMode.add(selectModeItem);
    return this;
  }

  /**
   * Select mode for search filters
   *
   * @return selectMode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SELECT_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<SearchSelectOptionEnum> getSelectMode() {
    return selectMode;
  }

  @JsonProperty(JSON_PROPERTY_SELECT_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelectMode(List<SearchSelectOptionEnum> selectMode) {
    this.selectMode = selectMode;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchDocumentKeyValueListPair searchDocumentKeyValueListPair =
        (SearchDocumentKeyValueListPair) o;
    return Objects.equals(this.key, searchDocumentKeyValueListPair.key)
        && Objects.equals(this.value, searchDocumentKeyValueListPair.value)
        && Objects.equals(this.selectMode, searchDocumentKeyValueListPair.selectMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, value, selectMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchDocumentKeyValueListPair {\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    selectMode: ").append(toIndentedString(selectMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static class Builder {

    private SearchDocumentKeyValueListPair instance;

    public Builder() {
      this(new SearchDocumentKeyValueListPair());
    }

    protected Builder(SearchDocumentKeyValueListPair instance) {
      this.instance = instance;
    }

    public SearchDocumentKeyValueListPair.Builder key(String key) {
      this.instance.key = key;
      return this;
    }

    public SearchDocumentKeyValueListPair.Builder value(List<String> value) {
      this.instance.value = value;
      return this;
    }

    public SearchDocumentKeyValueListPair.Builder selectMode(
        List<SearchSelectOptionEnum> selectMode) {
      this.instance.selectMode = selectMode;
      return this;
    }

    /**
     * returns a built SearchDocumentKeyValueListPair instance.
     *
     * <p>The builder is not reusable.
     */
    public SearchDocumentKeyValueListPair build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /** Create a builder with no initialized field. */
  public static SearchDocumentKeyValueListPair.Builder builder() {
    return new SearchDocumentKeyValueListPair.Builder();
  }

  /** Create a builder with a shallow copy of this instance. */
  public SearchDocumentKeyValueListPair.Builder toBuilder() {
    return new SearchDocumentKeyValueListPair.Builder()
        .key(getKey())
        .value(getValue())
        .selectMode(getSelectMode());
  }
}
