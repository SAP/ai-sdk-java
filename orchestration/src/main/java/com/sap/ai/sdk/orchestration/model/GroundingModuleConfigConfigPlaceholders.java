/*
 * Internal Orchestration Service API
 * Orchestration is an inference service which provides common additional capabilities for business AI scenarios, such as content filtering and data masking. At the core of the service is the LLM module which allows for an easy, harmonized access to the language models of gen AI hub. The service is designed to be modular and extensible, allowing for the addition of new modules in the future. Each module can be configured independently and at runtime, allowing for a high degree of flexibility in the orchestration of AI services.
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.orchestration.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/** Placeholders to be used for grounding input questions and output */
// CHECKSTYLE:OFF
public class GroundingModuleConfigConfigPlaceholders
// CHECKSTYLE:ON
{
  @JsonProperty("input")
  private List<String> input = new ArrayList<>();

  @JsonProperty("output")
  private String output;

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /** Default constructor for GroundingModuleConfigConfigPlaceholders. */
  protected GroundingModuleConfigConfigPlaceholders() {}

  /**
   * Set the input of this {@link GroundingModuleConfigConfigPlaceholders} instance and return the
   * same instance.
   *
   * @param input Contains the input parameters used for grounding input questions
   * @return The same instance of this {@link GroundingModuleConfigConfigPlaceholders} class
   */
  @Nonnull
  public GroundingModuleConfigConfigPlaceholders input(@Nonnull final List<String> input) {
    this.input = input;
    return this;
  }

  /**
   * Add one input instance to this {@link GroundingModuleConfigConfigPlaceholders}.
   *
   * @param inputItem The input that should be added
   * @return The same instance of type {@link GroundingModuleConfigConfigPlaceholders}
   */
  @Nonnull
  public GroundingModuleConfigConfigPlaceholders addInputItem(@Nonnull final String inputItem) {
    if (this.input == null) {
      this.input = new ArrayList<>();
    }
    this.input.add(inputItem);
    return this;
  }

  /**
   * Contains the input parameters used for grounding input questions
   *
   * @return input The input of this {@link GroundingModuleConfigConfigPlaceholders} instance.
   */
  @Nonnull
  public List<String> getInput() {
    return input;
  }

  /**
   * Set the input of this {@link GroundingModuleConfigConfigPlaceholders} instance.
   *
   * @param input Contains the input parameters used for grounding input questions
   */
  public void setInput(@Nonnull final List<String> input) {
    this.input = input;
  }

  /**
   * Set the output of this {@link GroundingModuleConfigConfigPlaceholders} instance and return the
   * same instance.
   *
   * @param output Placeholder name for grounding output
   * @return The same instance of this {@link GroundingModuleConfigConfigPlaceholders} class
   */
  @Nonnull
  public GroundingModuleConfigConfigPlaceholders output(@Nonnull final String output) {
    this.output = output;
    return this;
  }

  /**
   * Placeholder name for grounding output
   *
   * @return output The output of this {@link GroundingModuleConfigConfigPlaceholders} instance.
   */
  @Nonnull
  public String getOutput() {
    return output;
  }

  /**
   * Set the output of this {@link GroundingModuleConfigConfigPlaceholders} instance.
   *
   * @param output Placeholder name for grounding output
   */
  public void setOutput(@Nonnull final String output) {
    this.output = output;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link
   * GroundingModuleConfigConfigPlaceholders}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link
   * GroundingModuleConfigConfigPlaceholders} instance.
   *
   * @deprecated Use {@link #toMap()} instead.
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException(
          "GroundingModuleConfigConfigPlaceholders has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link GroundingModuleConfigConfigPlaceholders}
   * instance including unrecognized properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap() {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if (input != null) declaredFields.put("input", input);
    if (output != null) declaredFields.put("output", output);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link GroundingModuleConfigConfigPlaceholders}
   * instance. If the map previously contained a mapping for the key, the old value is replaced by
   * the specified value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final GroundingModuleConfigConfigPlaceholders groundingModuleConfigConfigPlaceholders =
        (GroundingModuleConfigConfigPlaceholders) o;
    return Objects.equals(
            this.cloudSdkCustomFields, groundingModuleConfigConfigPlaceholders.cloudSdkCustomFields)
        && Objects.equals(this.input, groundingModuleConfigConfigPlaceholders.input)
        && Objects.equals(this.output, groundingModuleConfigConfigPlaceholders.output);
  }

  @Override
  public int hashCode() {
    return Objects.hash(input, output, cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class GroundingModuleConfigConfigPlaceholders {\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    output: ").append(toIndentedString(output)).append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create a type-safe, fluent-api builder object to construct a new {@link
   * GroundingModuleConfigConfigPlaceholders} instance with all required arguments.
   */
  public static Builder create() {
    return (input) ->
        (output) -> new GroundingModuleConfigConfigPlaceholders().input(input).output(output);
  }

  /** Builder helper class. */
  public interface Builder {
    /**
     * Set the input of this {@link GroundingModuleConfigConfigPlaceholders} instance.
     *
     * @param input Contains the input parameters used for grounding input questions
     * @return The GroundingModuleConfigConfigPlaceholders builder.
     */
    Builder1 input(@Nonnull final List<String> input);

    /**
     * Set the input of this {@link GroundingModuleConfigConfigPlaceholders} instance.
     *
     * @param input Contains the input parameters used for grounding input questions
     * @return The GroundingModuleConfigConfigPlaceholders builder.
     */
    default Builder1 input(@Nonnull final String... input) {
      return input(Arrays.asList(input));
    }
  }

  /** Builder helper class. */
  public interface Builder1 {
    /**
     * Set the output of this {@link GroundingModuleConfigConfigPlaceholders} instance.
     *
     * @param output Placeholder name for grounding output
     * @return The GroundingModuleConfigConfigPlaceholders instance.
     */
    GroundingModuleConfigConfigPlaceholders output(@Nonnull final String output);
  }
}
