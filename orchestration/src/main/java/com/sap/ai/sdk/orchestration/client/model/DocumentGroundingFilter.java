/*
 * Internal Orchestration Service API
 * SAP AI Core - Orchestration Service API
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.orchestration.client.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

/** DocumentGroundingFilter */
@JsonPropertyOrder({
  DocumentGroundingFilter.JSON_PROPERTY_ID,
  DocumentGroundingFilter.JSON_PROPERTY_SEARCH_CONFIG,
  DocumentGroundingFilter.JSON_PROPERTY_DATA_REPOSITORIES,
  DocumentGroundingFilter.JSON_PROPERTY_DATA_REPOSITORY_TYPE,
  DocumentGroundingFilter.JSON_PROPERTY_DATA_REPOSITORY_METADATA,
  DocumentGroundingFilter.JSON_PROPERTY_DOCUMENT_METADATA,
  DocumentGroundingFilter.JSON_PROPERTY_CHUNK_METADATA
})
@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.9.0")
public class DocumentGroundingFilter implements GroundingModuleConfigConfigFiltersInner {
  public static final String JSON_PROPERTY_ID = "id";
  private Object id = null;

  public static final String JSON_PROPERTY_SEARCH_CONFIG = "search_config";
  private JsonNullable<GroundingFilterSearchConfiguration> searchConfig =
      JsonNullable.<GroundingFilterSearchConfiguration>undefined();

  public static final String JSON_PROPERTY_DATA_REPOSITORIES = "data_repositories";
  private List<String> dataRepositories = new ArrayList<>(Arrays.asList("*"));

  public static final String JSON_PROPERTY_DATA_REPOSITORY_TYPE = "data_repository_type";
  private DataRepositoryType dataRepositoryType;

  public static final String JSON_PROPERTY_DATA_REPOSITORY_METADATA = "data_repository_metadata";
  private List<KeyValueListPair> dataRepositoryMetadata = new ArrayList<>();

  public static final String JSON_PROPERTY_DOCUMENT_METADATA = "document_metadata";
  private List<SearchDocumentKeyValueListPair> documentMetadata = new ArrayList<>();

  public static final String JSON_PROPERTY_CHUNK_METADATA = "chunk_metadata";
  private List<KeyValueListPair> chunkMetadata = new ArrayList<>();

  public DocumentGroundingFilter() {}

  public DocumentGroundingFilter id(Object id) {

    this.id = id;
    return this;
  }

  /**
   * Identifier of this SearchFilter - unique per request.
   *
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Object getId() {
    return id;
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Object id) {
    this.id = id;
  }

  public DocumentGroundingFilter searchConfig(GroundingFilterSearchConfiguration searchConfig) {
    this.searchConfig = JsonNullable.<GroundingFilterSearchConfiguration>of(searchConfig);

    return this;
  }

  /**
   * Get searchConfig
   *
   * @return searchConfig
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public GroundingFilterSearchConfiguration getSearchConfig() {
    return searchConfig.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SEARCH_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<GroundingFilterSearchConfiguration> getSearchConfig_JsonNullable() {
    return searchConfig;
  }

  @JsonProperty(JSON_PROPERTY_SEARCH_CONFIG)
  public void setSearchConfig_JsonNullable(
      JsonNullable<GroundingFilterSearchConfiguration> searchConfig) {
    this.searchConfig = searchConfig;
  }

  public void setSearchConfig(GroundingFilterSearchConfiguration searchConfig) {
    this.searchConfig = JsonNullable.<GroundingFilterSearchConfiguration>of(searchConfig);
  }

  public DocumentGroundingFilter dataRepositories(List<String> dataRepositories) {

    this.dataRepositories = dataRepositories;
    return this;
  }

  public DocumentGroundingFilter addDataRepositoriesItem(String dataRepositoriesItem) {
    if (this.dataRepositories == null) {
      this.dataRepositories = new ArrayList<>(Arrays.asList("*"));
    }
    this.dataRepositories.add(dataRepositoriesItem);
    return this;
  }

  /**
   * Specify [&#39;*&#39;] to search across all DataRepositories or give a specific list of
   * DataRepository ids.
   *
   * @return dataRepositories
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA_REPOSITORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getDataRepositories() {
    return dataRepositories;
  }

  @JsonProperty(JSON_PROPERTY_DATA_REPOSITORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataRepositories(List<String> dataRepositories) {
    this.dataRepositories = dataRepositories;
  }

  public DocumentGroundingFilter dataRepositoryType(DataRepositoryType dataRepositoryType) {

    this.dataRepositoryType = dataRepositoryType;
    return this;
  }

  /**
   * Get dataRepositoryType
   *
   * @return dataRepositoryType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA_REPOSITORY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public DataRepositoryType getDataRepositoryType() {
    return dataRepositoryType;
  }

  @JsonProperty(JSON_PROPERTY_DATA_REPOSITORY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDataRepositoryType(DataRepositoryType dataRepositoryType) {
    this.dataRepositoryType = dataRepositoryType;
  }

  public DocumentGroundingFilter dataRepositoryMetadata(
      List<KeyValueListPair> dataRepositoryMetadata) {

    this.dataRepositoryMetadata = dataRepositoryMetadata;
    return this;
  }

  public DocumentGroundingFilter addDataRepositoryMetadataItem(
      KeyValueListPair dataRepositoryMetadataItem) {
    if (this.dataRepositoryMetadata == null) {
      this.dataRepositoryMetadata = new ArrayList<>();
    }
    this.dataRepositoryMetadata.add(dataRepositoryMetadataItem);
    return this;
  }

  /**
   * Restrict DataRepositories considered during search to those annotated with the given metadata.
   * Useful when combined with dataRepositories&#x3D;[&#39;*&#39;]
   *
   * @return dataRepositoryMetadata
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA_REPOSITORY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<KeyValueListPair> getDataRepositoryMetadata() {
    return dataRepositoryMetadata;
  }

  @JsonProperty(JSON_PROPERTY_DATA_REPOSITORY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataRepositoryMetadata(List<KeyValueListPair> dataRepositoryMetadata) {
    this.dataRepositoryMetadata = dataRepositoryMetadata;
  }

  public DocumentGroundingFilter documentMetadata(
      List<SearchDocumentKeyValueListPair> documentMetadata) {

    this.documentMetadata = documentMetadata;
    return this;
  }

  public DocumentGroundingFilter addDocumentMetadataItem(
      SearchDocumentKeyValueListPair documentMetadataItem) {
    if (this.documentMetadata == null) {
      this.documentMetadata = new ArrayList<>();
    }
    this.documentMetadata.add(documentMetadataItem);
    return this;
  }

  /**
   * Restrict documents considered during search to those annotated with the given metadata.
   *
   * @return documentMetadata
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<SearchDocumentKeyValueListPair> getDocumentMetadata() {
    return documentMetadata;
  }

  @JsonProperty(JSON_PROPERTY_DOCUMENT_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentMetadata(List<SearchDocumentKeyValueListPair> documentMetadata) {
    this.documentMetadata = documentMetadata;
  }

  public DocumentGroundingFilter chunkMetadata(List<KeyValueListPair> chunkMetadata) {

    this.chunkMetadata = chunkMetadata;
    return this;
  }

  public DocumentGroundingFilter addChunkMetadataItem(KeyValueListPair chunkMetadataItem) {
    if (this.chunkMetadata == null) {
      this.chunkMetadata = new ArrayList<>();
    }
    this.chunkMetadata.add(chunkMetadataItem);
    return this;
  }

  /**
   * Restrict chunks considered during search to those with the given metadata.
   *
   * @return chunkMetadata
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHUNK_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<KeyValueListPair> getChunkMetadata() {
    return chunkMetadata;
  }

  @JsonProperty(JSON_PROPERTY_CHUNK_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChunkMetadata(List<KeyValueListPair> chunkMetadata) {
    this.chunkMetadata = chunkMetadata;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentGroundingFilter documentGroundingFilter = (DocumentGroundingFilter) o;
    return Objects.equals(this.id, documentGroundingFilter.id)
        && equalsNullable(this.searchConfig, documentGroundingFilter.searchConfig)
        && Objects.equals(this.dataRepositories, documentGroundingFilter.dataRepositories)
        && Objects.equals(this.dataRepositoryType, documentGroundingFilter.dataRepositoryType)
        && Objects.equals(
            this.dataRepositoryMetadata, documentGroundingFilter.dataRepositoryMetadata)
        && Objects.equals(this.documentMetadata, documentGroundingFilter.documentMetadata)
        && Objects.equals(this.chunkMetadata, documentGroundingFilter.chunkMetadata);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b
        || (a != null
            && b != null
            && a.isPresent()
            && b.isPresent()
            && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        id,
        hashCodeNullable(searchConfig),
        dataRepositories,
        dataRepositoryType,
        dataRepositoryMetadata,
        documentMetadata,
        chunkMetadata);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[] {a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentGroundingFilter {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    searchConfig: ").append(toIndentedString(searchConfig)).append("\n");
    sb.append("    dataRepositories: ").append(toIndentedString(dataRepositories)).append("\n");
    sb.append("    dataRepositoryType: ").append(toIndentedString(dataRepositoryType)).append("\n");
    sb.append("    dataRepositoryMetadata: ")
        .append(toIndentedString(dataRepositoryMetadata))
        .append("\n");
    sb.append("    documentMetadata: ").append(toIndentedString(documentMetadata)).append("\n");
    sb.append("    chunkMetadata: ").append(toIndentedString(chunkMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static class Builder {

    private DocumentGroundingFilter instance;

    public Builder() {
      this(new DocumentGroundingFilter());
    }

    protected Builder(DocumentGroundingFilter instance) {
      this.instance = instance;
    }

    public DocumentGroundingFilter.Builder id(Object id) {
      this.instance.id = id;
      return this;
    }

    public DocumentGroundingFilter.Builder searchConfig(
        GroundingFilterSearchConfiguration searchConfig) {
      this.instance.searchConfig =
          JsonNullable.<GroundingFilterSearchConfiguration>of(searchConfig);
      return this;
    }

    public DocumentGroundingFilter.Builder searchConfig(
        JsonNullable<GroundingFilterSearchConfiguration> searchConfig) {
      this.instance.searchConfig = searchConfig;
      return this;
    }

    public DocumentGroundingFilter.Builder dataRepositories(List<String> dataRepositories) {
      this.instance.dataRepositories = dataRepositories;
      return this;
    }

    public DocumentGroundingFilter.Builder dataRepositoryType(
        DataRepositoryType dataRepositoryType) {
      this.instance.dataRepositoryType = dataRepositoryType;
      return this;
    }

    public DocumentGroundingFilter.Builder dataRepositoryMetadata(
        List<KeyValueListPair> dataRepositoryMetadata) {
      this.instance.dataRepositoryMetadata = dataRepositoryMetadata;
      return this;
    }

    public DocumentGroundingFilter.Builder documentMetadata(
        List<SearchDocumentKeyValueListPair> documentMetadata) {
      this.instance.documentMetadata = documentMetadata;
      return this;
    }

    public DocumentGroundingFilter.Builder chunkMetadata(List<KeyValueListPair> chunkMetadata) {
      this.instance.chunkMetadata = chunkMetadata;
      return this;
    }

    /**
     * returns a built DocumentGroundingFilter instance.
     *
     * <p>The builder is not reusable.
     */
    public DocumentGroundingFilter build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /** Create a builder with no initialized field. */
  public static DocumentGroundingFilter.Builder builder() {
    return new DocumentGroundingFilter.Builder();
  }

  /** Create a builder with a shallow copy of this instance. */
  public DocumentGroundingFilter.Builder toBuilder() {
    return new DocumentGroundingFilter.Builder()
        .id(getId())
        .searchConfig(getSearchConfig())
        .dataRepositories(getDataRepositories())
        .dataRepositoryType(getDataRepositoryType())
        .dataRepositoryMetadata(getDataRepositoryMetadata())
        .documentMetadata(getDocumentMetadata())
        .chunkMetadata(getChunkMetadata());
  }
}
