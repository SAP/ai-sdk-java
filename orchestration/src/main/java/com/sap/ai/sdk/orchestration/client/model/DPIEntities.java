/*
 * Orchestration
 * Orchestration is an inference service which provides common additional capabilities for business AI scenarios, such as content filtering and data masking. At the core of the service is the LLM module which allows for an easy, harmonized access to the language models of gen AI hub. The service is designed to be modular and extensible, allowing for the addition of new modules in the future. Each module can be configured independently and at runtime, allowing for a high degree of flexibility in the orchestration of AI services.
 *
 * The version of the OpenAPI document: 0.29.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.orchestration.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import javax.annotation.Nonnull;

/** Default entities supported by data privacy and integration service */
public enum DPIEntities {
  PERSON("profile-person"),

  ORG("profile-org"),

  UNIVERSITY("profile-university"),

  LOCATION("profile-location"),

  EMAIL("profile-email"),

  PHONE("profile-phone"),

  ADDRESS("profile-address"),

  SAPIDS_INTERNAL("profile-sapids-internal"),

  SAPIDS_PUBLIC("profile-sapids-public"),

  URL("profile-url"),

  USERNAME_PASSWORD("profile-username-password"),

  NATIONALID("profile-nationalid"),

  IBAN("profile-iban"),

  SSN("profile-ssn"),

  CREDIT_CARD_NUMBER("profile-credit-card-number"),

  PASSPORT("profile-passport"),

  DRIVERLICENSE("profile-driverlicense"),

  NATIONALITY("profile-nationality"),

  RELIGIOUS_GROUP("profile-religious-group"),

  POLITICAL_GROUP("profile-political-group"),

  PRONOUNS_GENDER("profile-pronouns-gender"),

  GENDER("profile-gender"),

  SEXUAL_ORIENTATION("profile-sexual-orientation"),

  TRADE_UNION("profile-trade-union"),

  SENSITIVE_DATA("profile-sensitive-data"),

  UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

  private final String value;

  DPIEntities(String value) {
    this.value = value;
  }

  /**
   * @return The enum value.
   */
  @JsonValue
  public String getValue() {
    return value;
  }

  /**
   * @return The String representation of the enum value.
   */
  @Override
  @Nonnull
  public String toString() {
    return String.valueOf(value);
  }

  /**
   * Converts the given value to its enum representation.
   *
   * @param value The input value.
   * @return The enum representation of the given value.
   */
  @JsonCreator
  public static DPIEntities fromValue(@Nonnull final String value) {
    for (final DPIEntities b : DPIEntities.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    return UNKNOWN_DEFAULT_OPEN_API;
  }
}
