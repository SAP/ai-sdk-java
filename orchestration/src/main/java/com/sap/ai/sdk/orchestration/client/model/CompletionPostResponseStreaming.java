/*
 * Orchestration
 * Orchestration is an inference service which provides common additional capabilities for business AI scenarios, such as content filtering and data masking. At the core of the service is the LLM module which allows for an easy, harmonized access to the language models of gen AI hub. The service is designed to be modular and extensible, allowing for the addition of new modules in the future. Each module can be configured independently and at runtime, allowing for a high degree of flexibility in the orchestration of AI services.
 *
 * The version of the OpenAPI document: 0.29.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.orchestration.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** CompletionPostResponseStreaming */
@JsonPropertyOrder({
  CompletionPostResponseStreaming.JSON_PROPERTY_REQUEST_ID,
  CompletionPostResponseStreaming.JSON_PROPERTY_MODULE_RESULTS,
  CompletionPostResponseStreaming.JSON_PROPERTY_ORCHESTRATION_RESULT
})
@com.google.common.annotations.Beta
@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.9.0")
public class CompletionPostResponseStreaming {
  public static final String JSON_PROPERTY_REQUEST_ID = "request_id";
  private String requestId;

  public static final String JSON_PROPERTY_MODULE_RESULTS = "module_results";
  private ModuleResults moduleResults;

  public static final String JSON_PROPERTY_ORCHESTRATION_RESULT = "orchestration_result";
  private LLMModuleResultStreaming orchestrationResult;

  public CompletionPostResponseStreaming() {}

  public CompletionPostResponseStreaming requestId(String requestId) {

    this.requestId = requestId;
    return this;
  }

  /**
   * ID of the request
   *
   * @return requestId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getRequestId() {
    return requestId;
  }

  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }

  public CompletionPostResponseStreaming moduleResults(ModuleResults moduleResults) {

    this.moduleResults = moduleResults;
    return this;
  }

  /**
   * Get moduleResults
   *
   * @return moduleResults
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODULE_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ModuleResults getModuleResults() {
    return moduleResults;
  }

  @JsonProperty(JSON_PROPERTY_MODULE_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModuleResults(ModuleResults moduleResults) {
    this.moduleResults = moduleResults;
  }

  public CompletionPostResponseStreaming orchestrationResult(
      LLMModuleResultStreaming orchestrationResult) {

    this.orchestrationResult = orchestrationResult;
    return this;
  }

  /**
   * Get orchestrationResult
   *
   * @return orchestrationResult
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORCHESTRATION_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public LLMModuleResultStreaming getOrchestrationResult() {
    return orchestrationResult;
  }

  @JsonProperty(JSON_PROPERTY_ORCHESTRATION_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrchestrationResult(LLMModuleResultStreaming orchestrationResult) {
    this.orchestrationResult = orchestrationResult;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompletionPostResponseStreaming completionPostResponseStreaming =
        (CompletionPostResponseStreaming) o;
    return Objects.equals(this.requestId, completionPostResponseStreaming.requestId)
        && Objects.equals(this.moduleResults, completionPostResponseStreaming.moduleResults)
        && Objects.equals(
            this.orchestrationResult, completionPostResponseStreaming.orchestrationResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, moduleResults, orchestrationResult);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompletionPostResponseStreaming {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    moduleResults: ").append(toIndentedString(moduleResults)).append("\n");
    sb.append("    orchestrationResult: ")
        .append(toIndentedString(orchestrationResult))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static class Builder {

    private CompletionPostResponseStreaming instance;

    public Builder() {
      this(new CompletionPostResponseStreaming());
    }

    protected Builder(CompletionPostResponseStreaming instance) {
      this.instance = instance;
    }

    public CompletionPostResponseStreaming.Builder requestId(String requestId) {
      this.instance.requestId = requestId;
      return this;
    }

    public CompletionPostResponseStreaming.Builder moduleResults(ModuleResults moduleResults) {
      this.instance.moduleResults = moduleResults;
      return this;
    }

    public CompletionPostResponseStreaming.Builder orchestrationResult(
        LLMModuleResultStreaming orchestrationResult) {
      this.instance.orchestrationResult = orchestrationResult;
      return this;
    }

    /**
     * returns a built CompletionPostResponseStreaming instance.
     *
     * <p>The builder is not reusable.
     */
    public CompletionPostResponseStreaming build() {
      try {
        return this.instance;
      } finally {
        // ensure that this.instance is not reused
        this.instance = null;
      }
    }

    @Override
    public String toString() {
      return getClass() + "=(" + instance + ")";
    }
  }

  /** Create a builder with no initialized field. */
  public static CompletionPostResponseStreaming.Builder builder() {
    return new CompletionPostResponseStreaming.Builder();
  }

  /** Create a builder with a shallow copy of this instance. */
  public CompletionPostResponseStreaming.Builder toBuilder() {
    return new CompletionPostResponseStreaming.Builder()
        .requestId(getRequestId())
        .moduleResults(getModuleResults())
        .orchestrationResult(getOrchestrationResult());
  }
}
