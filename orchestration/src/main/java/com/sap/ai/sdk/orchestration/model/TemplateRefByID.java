/*
 * Internal Orchestration Service API
 * Orchestration is an inference service which provides common additional capabilities for business AI scenarios, such as content filtering and data masking. At the core of the service is the LLM module which allows for an easy, harmonized access to the language models of gen AI hub. The service is designed to be modular and extensible, allowing for the addition of new modules in the future. Each module can be configured independently and at runtime, allowing for a high degree of flexibility in the orchestration of AI services.
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.orchestration.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/** TemplateRefByID */
// CHECKSTYLE:OFF
public class TemplateRefByID implements TemplateRefTemplateRef
// CHECKSTYLE:ON
{
  @JsonProperty("id")
  private String id;

  /**
   * Defines the scope that is searched for the referenced template. &#39;tenant&#39; indicates the
   * template is shared across all resource groups within the tenant, while &#39;resource_group&#39;
   * indicates the template is only accessible within the specific resource group.
   */
  public enum ScopeEnum {
    /** The RESOURCE_GROUP option of this TemplateRefByID */
    RESOURCE_GROUP("resource_group"),

    /** The TENANT option of this TemplateRefByID */
    TENANT("tenant"),

    /** The UNKNOWN_DEFAULT_OPEN_API option of this TemplateRefByID */
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    ScopeEnum(String value) {
      this.value = value;
    }

    /**
     * Get the value of the enum
     *
     * @return The enum value
     */
    @JsonValue
    @Nonnull
    public String getValue() {
      return value;
    }

    /**
     * Get the String value of the enum value.
     *
     * @return The enum value as String
     */
    @Override
    @Nonnull
    public String toString() {
      return String.valueOf(value);
    }

    /**
     * Get the enum value from a String value
     *
     * @param value The String value
     * @return The enum value of type TemplateRefByID
     */
    @JsonCreator
    @Nonnull
    public static ScopeEnum fromValue(@Nonnull final String value) {
      for (ScopeEnum b : ScopeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  @JsonProperty("scope")
  private ScopeEnum scope = ScopeEnum.TENANT;

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /** Default constructor for TemplateRefByID. */
  protected TemplateRefByID() {}

  /**
   * Set the id of this {@link TemplateRefByID} instance and return the same instance.
   *
   * @param id ID of the template in prompt registry
   * @return The same instance of this {@link TemplateRefByID} class
   */
  @Nonnull
  public TemplateRefByID id(@Nonnull final String id) {
    this.id = id;
    return this;
  }

  /**
   * ID of the template in prompt registry
   *
   * @return id The id of this {@link TemplateRefByID} instance.
   */
  @Nonnull
  public String getId() {
    return id;
  }

  /**
   * Set the id of this {@link TemplateRefByID} instance.
   *
   * @param id ID of the template in prompt registry
   */
  public void setId(@Nonnull final String id) {
    this.id = id;
  }

  /**
   * Set the scope of this {@link TemplateRefByID} instance and return the same instance.
   *
   * @param scope Defines the scope that is searched for the referenced template. &#39;tenant&#39;
   *     indicates the template is shared across all resource groups within the tenant, while
   *     &#39;resource_group&#39; indicates the template is only accessible within the specific
   *     resource group.
   * @return The same instance of this {@link TemplateRefByID} class
   */
  @Nonnull
  public TemplateRefByID scope(@Nullable final ScopeEnum scope) {
    this.scope = scope;
    return this;
  }

  /**
   * Defines the scope that is searched for the referenced template. &#39;tenant&#39; indicates the
   * template is shared across all resource groups within the tenant, while &#39;resource_group&#39;
   * indicates the template is only accessible within the specific resource group.
   *
   * @return scope The scope of this {@link TemplateRefByID} instance.
   */
  @Nonnull
  public ScopeEnum getScope() {
    return scope;
  }

  /**
   * Set the scope of this {@link TemplateRefByID} instance.
   *
   * @param scope Defines the scope that is searched for the referenced template. &#39;tenant&#39;
   *     indicates the template is shared across all resource groups within the tenant, while
   *     &#39;resource_group&#39; indicates the template is only accessible within the specific
   *     resource group.
   */
  public void setScope(@Nullable final ScopeEnum scope) {
    this.scope = scope;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link TemplateRefByID}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link TemplateRefByID} instance.
   *
   * @deprecated Use {@link #toMap()} instead.
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException("TemplateRefByID has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link TemplateRefByID} instance including unrecognized
   * properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap() {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if (id != null) declaredFields.put("id", id);
    if (scope != null) declaredFields.put("scope", scope);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link TemplateRefByID} instance. If the map previously
   * contained a mapping for the key, the old value is replaced by the specified value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final TemplateRefByID templateRefByID = (TemplateRefByID) o;
    return Objects.equals(this.cloudSdkCustomFields, templateRefByID.cloudSdkCustomFields)
        && Objects.equals(this.id, templateRefByID.id)
        && Objects.equals(this.scope, templateRefByID.scope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, scope, cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class TemplateRefByID {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create a type-safe, fluent-api builder object to construct a new {@link TemplateRefByID}
   * instance with all required arguments.
   */
  public static Builder create() {
    return (id) -> new TemplateRefByID().id(id);
  }

  /** Builder helper class. */
  public interface Builder {
    /**
     * Set the id of this {@link TemplateRefByID} instance.
     *
     * @param id ID of the template in prompt registry
     * @return The TemplateRefByID instance.
     */
    TemplateRefByID id(@Nonnull final String id);
  }
}
