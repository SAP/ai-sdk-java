name: "Continuous Integration"
on:
  pull_request:
    branches: [ "*" ]
  push:
    branches: [ "main" ]
  workflow_dispatch: # triggered by the prepare-release workflow

env:
  MVN_MULTI_THREADED_ARGS: --batch-mode --no-transfer-progress --fail-at-end --show-version --threads 1C
  MVN_SKIP_CI_PLUGINS: -DskipFormatting -Denforcer.skip -Djacoco.skip -Dmdep.analyze.skip
  JAVA_VERSION: 17

jobs:

  continuous-integration:
    runs-on: ubuntu-latest
    steps:

      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: "Setup java"
        uses: actions/setup-java@v4
        with:
          distribution: "sapmachine"
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      - name: "REUSE Compliance Check"
        uses: fsfe/reuse-action@v5

      - name: "Format code"
        run: |
          MVN_ARGS="${{ env.MVN_MULTI_THREADED_ARGS }} spotless:apply"
          mvn $MVN_ARGS

      - name: "Commit formatting changes if necessary"
        run: |
          diff=`git diff`
          if [ ! -z "$diff" ]; then
            git config --global user.email "cloudsdk@sap.com"
            git config --global user.name "SAP Cloud SDK Bot"
            git commit -am "Formatting"
            git push
          fi

      - name: "Build SDK"
        run: |
          MVN_ARGS="${{ env.MVN_MULTI_THREADED_ARGS }} clean install -Dgenerate -DskipTests -DskipFormatting"
          mvn $MVN_ARGS

      - name: "Verify Local Changes"
        run: |
          CHANGED_FILES="$(git --no-pager diff --name-only)"
          if [[ ! -z "$CHANGED_FILES" ]]; then
              echo "There are local changes in the following files:"
              echo "$CHANGED_FILES"
              echo "Printing the git diff:"
              git --no-pager diff
              exit 1
          fi

      - name: "Run Unit Tests"
        run: |
          MVN_ARGS="${{ env.MVN_MULTI_THREADED_ARGS }} org.jacoco:jacoco-maven-plugin:prepare-agent surefire:test org.jacoco:jacoco-maven-plugin:report"
          mvn $MVN_ARGS

      - name: "Generate Coverage Report"
        run: |
          MVN_ARGS="${{ env.MVN_MULTI_THREADED_ARGS }} org.jacoco:jacoco-maven-plugin:report"
          mvn $MVN_ARGS

      - name: "Upload Coverage Report"
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: target/site/jacoco

      - name: "Coverage Report"
        run: |
          git fetch origin main:main
          java_classes=($(git diff --name-only origin/main...HEAD -- '*.java' | sed -E 's|.*/||; s|\.[^\.]+$||'))
          if [ ${#java_classes[@]} -gt 0 ]; then
            echo "Detected changes for Java classes:" >> $GITHUB_STEP_SUMMARY
            printf " * \`%s\`\n" "${java_classes[@]}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "# Coverage report" >> $GITHUB_STEP_SUMMARY
            find . -path '*/target/site/jacoco/jacoco.csv' | while read -r file; do
              echo "<details><summary>${file:2:-30}</summary>" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "| | Group | Package | Class | Instruction % | Branch % | Line % | Complexity % | Method % |" >> $GITHUB_STEP_SUMMARY
              echo "|-|-------|---------|-------|--------------:|---------:|-------:|-------------:|---------:|" >> $GITHUB_STEP_SUMMARY
              tail -n +2 "$file" | while IFS=, read -r GROUP PACKAGE CLASS INSTRUCTION_MISSED INSTRUCTION_COVERED BRANCH_MISSED BRANCH_COVERED LINE_MISSED LINE_COVERED COMPLEXITY_MISSED COMPLEXITY_COVERED METHOD_MISSED METHOD_COVERED; do
                INSTRUCTION_PCT=$((INSTRUCTION_MISSED + INSTRUCTION_COVERED > 0 ? INSTRUCTION_COVERED * 100 / (INSTRUCTION_MISSED + INSTRUCTION_COVERED) : -1))
                BRANCH_PCT=$((BRANCH_MISSED + BRANCH_COVERED > 0 ? BRANCH_COVERED * 100 / (BRANCH_MISSED + BRANCH_COVERED) : -1))
                LINE_PCT=$((LINE_MISSED + LINE_COVERED > 0 ? LINE_COVERED * 100 / (LINE_MISSED + LINE_COVERED) : -1))
                COMPLEXITY_PCT=$((COMPLEXITY_MISSED + COMPLEXITY_COVERED > 0 ? COMPLEXITY_COVERED * 100 / (COMPLEXITY_MISSED + COMPLEXITY_COVERED) : -1))
                METHOD_PCT=$((METHOD_MISSED + METHOD_COVERED > 0 ? METHOD_COVERED * 100 / (METHOD_MISSED + METHOD_COVERED) : -1))
                CHECK=$([[ " ${java_classes[@]} " =~ " ${CLASS%%.*} " ]] && echo ":heavy_check_mark:" || echo "")
                echo "| $CHECK | $GROUP | \`$PACKAGE\` | \`$CLASS\` | ${INSTRUCTION_PCT/-1/""} | ${BRANCH_PCT/-1/""} | ${LINE_PCT/-1/""} | ${COMPLEXITY_PCT/-1/""} | ${METHOD_PCT/-1/""} |" >> $GITHUB_STEP_SUMMARY
              done
              echo "</details>" >> $GITHUB_STEP_SUMMARY
            done
            echo "Generated coverage report."
          else
            echo "No Java classes changed." >> $GITHUB_STEP_SUMMARY
          fi

      - name: "Slack Notification"
        if: ${{ github.ref == 'refs/heads/main' && failure() }}
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": "ðŸš¨ Main Build Failed! ðŸ˜¬ Please inspect & fix by clicking <https://github.com/SAP/ai-sdk-java/actions/runs/${{ github.run_id }}|here>"
            }
