name: "End-to-end Tests"
on:
  workflow_dispatch:
  schedule:
    - cron: 15 2 * * MON-FRI

env:
  MVN_MULTI_THREADED_ARGS: --batch-mode --no-transfer-progress --fail-at-end --show-version --threads 1C
  JAVA_VERSION: 17

jobs:
  end-to-end-tests:
    strategy:
      fail-fast: false
      matrix:
        environment: [ canary, production ]
        exclude:
          - environment: production
            # secret-name: AI_CORE_PRODUCTION
        include:
          - environment: canary
            secret-name: AI_CORE_CANARY
    runs-on: ubuntu-latest
    steps:

      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Setup java"
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      - name: "Build SDK"
        run: |
          MVN_ARGS="${{ env.MVN_MULTI_THREADED_ARGS }} clean install -DskipTests -DskipFormatting"
          mvn $MVN_ARGS

      - name: "Run tests"
        run: |
          MVN_ARGS="${{ env.MVN_MULTI_THREADED_ARGS }} surefire:test -pl :spring-app -DskipTests=false"
          mvn $MVN_ARGS "-Daicore.landscape=${{ matrix.environment }}"
        env:
          # See "End-to-end test application instructions" on the README.md to update the secret
          AICORE_SERVICE_KEY: ${{ secrets[matrix.secret-name] }}

      - name: "Start Application Locally"
        run: |
          cd sample-code/spring-app
          mvn spring-boot:run &
          timeout=15
          while ! nc -z localhost 8080; do
            sleep 1
            timeout=$((timeout - 1))
            if [ $timeout -le 0 ]; then
              echo "Server did not start within 15 seconds."
              exit 1
            fi
          done
        env:
          # See "End-to-end test application instructions" on the README.md to update the secret
          AICORE_SERVICE_KEY: ${{ secrets[matrix.secret-name] }}

      - name: "Health Check"
        # print response body with headers to stdout.  q:body only  O:print  -:stdout  S:headers
        run: wget -qO- -S localhost:8080

      - name: "Slack Notification"
        if: failure()
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "text": "‚ö†Ô∏è End-to-end tests failed! üò¨ Please inspect & fix by clicking <https://github.com/SAP/ai-sdk-java/actions/runs/${{ github.run_id }}|here>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
