/*
 * AI Core
 * Provides tools to manage your scenarios and workflows in SAP AI Core. Execute pipelines as a batch job, for example to pre-process or train your models, or perform batch inference.  Serve inference requests of trained models. Deploy Ð° trained machine learning model as a web service to serve inference requests with high performance.  Register your own Docker registry, synchronize your AI content from your own git repository, and register your own object store for training data and trained models.
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.core.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/** RTAModelBaseDataAllowedScenariosInner */
// CHECKSTYLE:OFF
public class RTAModelBaseDataAllowedScenariosInner
// CHECKSTYLE:ON
{
  @JsonProperty("scenarioId")
  private String scenarioId;

  @JsonProperty("executableId")
  private String executableId;

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /** Default constructor for RTAModelBaseDataAllowedScenariosInner. */
  protected RTAModelBaseDataAllowedScenariosInner() {}

  /**
   * Set the scenarioId of this {@link RTAModelBaseDataAllowedScenariosInner} instance and return
   * the same instance.
   *
   * @param scenarioId ID of the scenario
   * @return The same instance of this {@link RTAModelBaseDataAllowedScenariosInner} class
   */
  @Nonnull
  public RTAModelBaseDataAllowedScenariosInner scenarioId(@Nonnull final String scenarioId) {
    this.scenarioId = scenarioId;
    return this;
  }

  /**
   * ID of the scenario
   *
   * @return scenarioId The scenarioId of this {@link RTAModelBaseDataAllowedScenariosInner}
   *     instance.
   */
  @Nonnull
  public String getScenarioId() {
    return scenarioId;
  }

  /**
   * Set the scenarioId of this {@link RTAModelBaseDataAllowedScenariosInner} instance.
   *
   * @param scenarioId ID of the scenario
   */
  public void setScenarioId(@Nonnull final String scenarioId) {
    this.scenarioId = scenarioId;
  }

  /**
   * Set the executableId of this {@link RTAModelBaseDataAllowedScenariosInner} instance and return
   * the same instance.
   *
   * @param executableId ID of the executable
   * @return The same instance of this {@link RTAModelBaseDataAllowedScenariosInner} class
   */
  @Nonnull
  public RTAModelBaseDataAllowedScenariosInner executableId(@Nonnull final String executableId) {
    this.executableId = executableId;
    return this;
  }

  /**
   * ID of the executable
   *
   * @return executableId The executableId of this {@link RTAModelBaseDataAllowedScenariosInner}
   *     instance.
   */
  @Nonnull
  public String getExecutableId() {
    return executableId;
  }

  /**
   * Set the executableId of this {@link RTAModelBaseDataAllowedScenariosInner} instance.
   *
   * @param executableId ID of the executable
   */
  public void setExecutableId(@Nonnull final String executableId) {
    this.executableId = executableId;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link
   * RTAModelBaseDataAllowedScenariosInner}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link
   * RTAModelBaseDataAllowedScenariosInner} instance.
   *
   * @deprecated Use {@link #toMap()} instead.
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException(
          "RTAModelBaseDataAllowedScenariosInner has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link RTAModelBaseDataAllowedScenariosInner} instance
   * including unrecognized properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap() {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if (scenarioId != null) declaredFields.put("scenarioId", scenarioId);
    if (executableId != null) declaredFields.put("executableId", executableId);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link RTAModelBaseDataAllowedScenariosInner} instance.
   * If the map previously contained a mapping for the key, the old value is replaced by the
   * specified value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final RTAModelBaseDataAllowedScenariosInner rtAModelBaseDataAllowedScenariosInner =
        (RTAModelBaseDataAllowedScenariosInner) o;
    return Objects.equals(
            this.cloudSdkCustomFields, rtAModelBaseDataAllowedScenariosInner.cloudSdkCustomFields)
        && Objects.equals(this.scenarioId, rtAModelBaseDataAllowedScenariosInner.scenarioId)
        && Objects.equals(this.executableId, rtAModelBaseDataAllowedScenariosInner.executableId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scenarioId, executableId, cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class RTAModelBaseDataAllowedScenariosInner {\n");
    sb.append("    scenarioId: ").append(toIndentedString(scenarioId)).append("\n");
    sb.append("    executableId: ").append(toIndentedString(executableId)).append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create a type-safe, fluent-api builder object to construct a new {@link
   * RTAModelBaseDataAllowedScenariosInner} instance with all required arguments.
   */
  public static Builder create() {
    return (scenarioId) ->
        (executableId) ->
            new RTAModelBaseDataAllowedScenariosInner()
                .scenarioId(scenarioId)
                .executableId(executableId);
  }

  /** Builder helper class. */
  public interface Builder {
    /**
     * Set the scenarioId of this {@link RTAModelBaseDataAllowedScenariosInner} instance.
     *
     * @param scenarioId ID of the scenario
     * @return The RTAModelBaseDataAllowedScenariosInner builder.
     */
    Builder1 scenarioId(@Nonnull final String scenarioId);
  }

  /** Builder helper class. */
  public interface Builder1 {
    /**
     * Set the executableId of this {@link RTAModelBaseDataAllowedScenariosInner} instance.
     *
     * @param executableId ID of the executable
     * @return The RTAModelBaseDataAllowedScenariosInner instance.
     */
    RTAModelBaseDataAllowedScenariosInner executableId(@Nonnull final String executableId);
  }
}
