/*
 * AI Core
 * Provides tools to manage your scenarios and workflows in SAP AI Core. Execute pipelines as a batch job, for example to pre-process or train your models, or perform batch inference.  Serve inference requests of trained models. Deploy Ð° trained machine learning model as a web service to serve inference requests with high performance.  Register your own Docker registry, synchronize your AI content from your own git repository, and register your own object store for training data and trained models.
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.core.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/** BckndInstanceTypeGetResponse */
// CHECKSTYLE:OFF
public class BckndInstanceTypeGetResponse
// CHECKSTYLE:ON
{
  @JsonProperty("instanceTypes")
  private Map<String, BckndInstanceTypeValue> instanceTypes = new HashMap<>();

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /** Default constructor for BckndInstanceTypeGetResponse. */
  protected BckndInstanceTypeGetResponse() {}

  /**
   * Set the instanceTypes of this {@link BckndInstanceTypeGetResponse} instance and return the same
   * instance.
   *
   * @param instanceTypes The instanceTypes of this {@link BckndInstanceTypeGetResponse}
   * @return The same instance of this {@link BckndInstanceTypeGetResponse} class
   */
  @Nonnull
  public BckndInstanceTypeGetResponse instanceTypes(
      @Nonnull final Map<String, BckndInstanceTypeValue> instanceTypes) {
    this.instanceTypes = instanceTypes;
    return this;
  }

  /**
   * Put one instanceTypes instance to this {@link BckndInstanceTypeGetResponse} instance.
   *
   * @param key The String key of this instanceTypes instance
   * @param instanceTypesItem The instanceTypes that should be added under the given key
   * @return The same instance of type {@link BckndInstanceTypeGetResponse}
   */
  @Nonnull
  public BckndInstanceTypeGetResponse putinstanceTypesItem(
      @Nonnull final String key, @Nonnull final BckndInstanceTypeValue instanceTypesItem) {
    this.instanceTypes.put(key, instanceTypesItem);
    return this;
  }

  /**
   * Get instanceTypes
   *
   * @return instanceTypes The instanceTypes of this {@link BckndInstanceTypeGetResponse} instance.
   */
  @Nonnull
  public Map<String, BckndInstanceTypeValue> getInstanceTypes() {
    return instanceTypes;
  }

  /**
   * Set the instanceTypes of this {@link BckndInstanceTypeGetResponse} instance.
   *
   * @param instanceTypes The instanceTypes of this {@link BckndInstanceTypeGetResponse}
   */
  public void setInstanceTypes(@Nonnull final Map<String, BckndInstanceTypeValue> instanceTypes) {
    this.instanceTypes = instanceTypes;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link BckndInstanceTypeGetResponse}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link BckndInstanceTypeGetResponse}
   * instance.
   *
   * @deprecated Use {@link #toMap()} instead.
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException(
          "BckndInstanceTypeGetResponse has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link BckndInstanceTypeGetResponse} instance including
   * unrecognized properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap() {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if (instanceTypes != null) declaredFields.put("instanceTypes", instanceTypes);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link BckndInstanceTypeGetResponse} instance. If the
   * map previously contained a mapping for the key, the old value is replaced by the specified
   * value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final BckndInstanceTypeGetResponse bckndInstanceTypeGetResponse =
        (BckndInstanceTypeGetResponse) o;
    return Objects.equals(
            this.cloudSdkCustomFields, bckndInstanceTypeGetResponse.cloudSdkCustomFields)
        && Objects.equals(this.instanceTypes, bckndInstanceTypeGetResponse.instanceTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceTypes, cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class BckndInstanceTypeGetResponse {\n");
    sb.append("    instanceTypes: ").append(toIndentedString(instanceTypes)).append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create a type-safe, fluent-api builder object to construct a new {@link
   * BckndInstanceTypeGetResponse} instance with all required arguments.
   */
  public static Builder create() {
    return (instanceTypes) -> new BckndInstanceTypeGetResponse().instanceTypes(instanceTypes);
  }

  /** Builder helper class. */
  public interface Builder {
    /**
     * Set the instanceTypes of this {@link BckndInstanceTypeGetResponse} instance.
     *
     * @param instanceTypes The instanceTypes of this {@link BckndInstanceTypeGetResponse}
     * @return The BckndInstanceTypeGetResponse instance.
     */
    BckndInstanceTypeGetResponse instanceTypes(
        @Nonnull final Map<String, BckndInstanceTypeValue> instanceTypes);
  }
}
