/*
 * AI Core
 * Provides tools to manage your scenarios and workflows in SAP AI Core. Execute pipelines as a batch job, for example to pre-process or train your models, or perform batch inference.  Serve inference requests of trained models. Deploy Ð° trained machine learning model as a web service to serve inference requests with high performance.  Register your own Docker registry, synchronize your AI content from your own git repository, and register your own object store for training data and trained models.
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.core.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.math.BigDecimal;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/** BckndInstanceTypeValue */
// CHECKSTYLE:OFF
public class BckndInstanceTypeValue
// CHECKSTYLE:ON
{
  @JsonProperty("memory")
  private String memory;

  @JsonProperty("cpu")
  private BigDecimal cpu;

  @JsonProperty("gpu")
  private BigDecimal gpu;

  @JsonProperty("billableUnitsPerHour")
  private BigDecimal billableUnitsPerHour;

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /** Default constructor for BckndInstanceTypeValue. */
  protected BckndInstanceTypeValue() {}

  /**
   * Set the memory of this {@link BckndInstanceTypeValue} instance and return the same instance.
   *
   * @param memory Memory allocated for the instance type (e.g., \&quot;16Gi\&quot;)
   * @return The same instance of this {@link BckndInstanceTypeValue} class
   */
  @Nonnull
  public BckndInstanceTypeValue memory(@Nonnull final String memory) {
    this.memory = memory;
    return this;
  }

  /**
   * Memory allocated for the instance type (e.g., \&quot;16Gi\&quot;)
   *
   * @return memory The memory of this {@link BckndInstanceTypeValue} instance.
   */
  @Nonnull
  public String getMemory() {
    return memory;
  }

  /**
   * Set the memory of this {@link BckndInstanceTypeValue} instance.
   *
   * @param memory Memory allocated for the instance type (e.g., \&quot;16Gi\&quot;)
   */
  public void setMemory(@Nonnull final String memory) {
    this.memory = memory;
  }

  /**
   * Set the cpu of this {@link BckndInstanceTypeValue} instance and return the same instance.
   *
   * @param cpu Number of CPU cores allocated for the instance type
   * @return The same instance of this {@link BckndInstanceTypeValue} class
   */
  @Nonnull
  public BckndInstanceTypeValue cpu(@Nonnull final BigDecimal cpu) {
    this.cpu = cpu;
    return this;
  }

  /**
   * Number of CPU cores allocated for the instance type
   *
   * @return cpu The cpu of this {@link BckndInstanceTypeValue} instance.
   */
  @Nonnull
  public BigDecimal getCpu() {
    return cpu;
  }

  /**
   * Set the cpu of this {@link BckndInstanceTypeValue} instance.
   *
   * @param cpu Number of CPU cores allocated for the instance type
   */
  public void setCpu(@Nonnull final BigDecimal cpu) {
    this.cpu = cpu;
  }

  /**
   * Set the gpu of this {@link BckndInstanceTypeValue} instance and return the same instance.
   *
   * @param gpu Number of GPUs allocated for the instance type
   * @return The same instance of this {@link BckndInstanceTypeValue} class
   */
  @Nonnull
  public BckndInstanceTypeValue gpu(@Nonnull final BigDecimal gpu) {
    this.gpu = gpu;
    return this;
  }

  /**
   * Number of GPUs allocated for the instance type
   *
   * @return gpu The gpu of this {@link BckndInstanceTypeValue} instance.
   */
  @Nonnull
  public BigDecimal getGpu() {
    return gpu;
  }

  /**
   * Set the gpu of this {@link BckndInstanceTypeValue} instance.
   *
   * @param gpu Number of GPUs allocated for the instance type
   */
  public void setGpu(@Nonnull final BigDecimal gpu) {
    this.gpu = gpu;
  }

  /**
   * Set the billableUnitsPerHour of this {@link BckndInstanceTypeValue} instance and return the
   * same instance.
   *
   * @param billableUnitsPerHour Number of billable units per hour for the instance type
   * @return The same instance of this {@link BckndInstanceTypeValue} class
   */
  @Nonnull
  public BckndInstanceTypeValue billableUnitsPerHour(
      @Nonnull final BigDecimal billableUnitsPerHour) {
    this.billableUnitsPerHour = billableUnitsPerHour;
    return this;
  }

  /**
   * Number of billable units per hour for the instance type
   *
   * @return billableUnitsPerHour The billableUnitsPerHour of this {@link BckndInstanceTypeValue}
   *     instance.
   */
  @Nonnull
  public BigDecimal getBillableUnitsPerHour() {
    return billableUnitsPerHour;
  }

  /**
   * Set the billableUnitsPerHour of this {@link BckndInstanceTypeValue} instance.
   *
   * @param billableUnitsPerHour Number of billable units per hour for the instance type
   */
  public void setBillableUnitsPerHour(@Nonnull final BigDecimal billableUnitsPerHour) {
    this.billableUnitsPerHour = billableUnitsPerHour;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link BckndInstanceTypeValue}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link BckndInstanceTypeValue} instance.
   *
   * @deprecated Use {@link #toMap()} instead.
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException(
          "BckndInstanceTypeValue has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link BckndInstanceTypeValue} instance including
   * unrecognized properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap() {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if (memory != null) declaredFields.put("memory", memory);
    if (cpu != null) declaredFields.put("cpu", cpu);
    if (gpu != null) declaredFields.put("gpu", gpu);
    if (billableUnitsPerHour != null)
      declaredFields.put("billableUnitsPerHour", billableUnitsPerHour);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link BckndInstanceTypeValue} instance. If the map
   * previously contained a mapping for the key, the old value is replaced by the specified value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final BckndInstanceTypeValue bckndInstanceTypeValue = (BckndInstanceTypeValue) o;
    return Objects.equals(this.cloudSdkCustomFields, bckndInstanceTypeValue.cloudSdkCustomFields)
        && Objects.equals(this.memory, bckndInstanceTypeValue.memory)
        && Objects.equals(this.cpu, bckndInstanceTypeValue.cpu)
        && Objects.equals(this.gpu, bckndInstanceTypeValue.gpu)
        && Objects.equals(this.billableUnitsPerHour, bckndInstanceTypeValue.billableUnitsPerHour);
  }

  @Override
  public int hashCode() {
    return Objects.hash(memory, cpu, gpu, billableUnitsPerHour, cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class BckndInstanceTypeValue {\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    cpu: ").append(toIndentedString(cpu)).append("\n");
    sb.append("    gpu: ").append(toIndentedString(gpu)).append("\n");
    sb.append("    billableUnitsPerHour: ")
        .append(toIndentedString(billableUnitsPerHour))
        .append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create a type-safe, fluent-api builder object to construct a new {@link BckndInstanceTypeValue}
   * instance with all required arguments.
   */
  public static Builder create() {
    return (memory) ->
        (cpu) ->
            (gpu) ->
                (billableUnitsPerHour) ->
                    new BckndInstanceTypeValue()
                        .memory(memory)
                        .cpu(cpu)
                        .gpu(gpu)
                        .billableUnitsPerHour(billableUnitsPerHour);
  }

  /** Builder helper class. */
  public interface Builder {
    /**
     * Set the memory of this {@link BckndInstanceTypeValue} instance.
     *
     * @param memory Memory allocated for the instance type (e.g., \&quot;16Gi\&quot;)
     * @return The BckndInstanceTypeValue builder.
     */
    Builder1 memory(@Nonnull final String memory);
  }

  /** Builder helper class. */
  public interface Builder1 {
    /**
     * Set the cpu of this {@link BckndInstanceTypeValue} instance.
     *
     * @param cpu Number of CPU cores allocated for the instance type
     * @return The BckndInstanceTypeValue builder.
     */
    Builder2 cpu(@Nonnull final BigDecimal cpu);
  }

  /** Builder helper class. */
  public interface Builder2 {
    /**
     * Set the gpu of this {@link BckndInstanceTypeValue} instance.
     *
     * @param gpu Number of GPUs allocated for the instance type
     * @return The BckndInstanceTypeValue builder.
     */
    Builder3 gpu(@Nonnull final BigDecimal gpu);
  }

  /** Builder helper class. */
  public interface Builder3 {
    /**
     * Set the billableUnitsPerHour of this {@link BckndInstanceTypeValue} instance.
     *
     * @param billableUnitsPerHour Number of billable units per hour for the instance type
     * @return The BckndInstanceTypeValue instance.
     */
    BckndInstanceTypeValue billableUnitsPerHour(@Nonnull final BigDecimal billableUnitsPerHour);
  }
}
