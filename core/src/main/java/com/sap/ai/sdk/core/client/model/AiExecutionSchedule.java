/*
 * AI Core
 * Provides tools to manage your scenarios and workflows in SAP AI Core. Execute pipelines as a batch job, for example to pre-process or train your models, or perform batch inference.  Serve inference requests of trained models. Deploy Ð° trained machine learning model as a web service to serve inference requests with high performance.  Register your own Docker registry, synchronize your AI content from your own git repository, and register your own object store for training data and trained models.
 *
 * The version of the OpenAPI document: 2.36.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.core.client.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/** Data about execution schedule */
// CHECKSTYLE:OFF
public class AiExecutionSchedule
// CHECKSTYLE:ON
{
  @JsonProperty("cron")
  private String cron;

  @JsonProperty("name")
  private String name;

  @JsonProperty("configurationId")
  private String configurationId;

  @JsonProperty("start")
  private OffsetDateTime start;

  @JsonProperty("end")
  private OffsetDateTime end;

  @JsonProperty("id")
  private String id;

  @JsonProperty("status")
  private AiExecutionScheduleStatus status;

  @JsonProperty("createdAt")
  private OffsetDateTime createdAt;

  @JsonProperty("modifiedAt")
  private OffsetDateTime modifiedAt;

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /** Default constructor for AiExecutionSchedule. */
  protected AiExecutionSchedule() {}

  /**
   * Set the cron of this {@link AiExecutionSchedule} instance and return the same instance.
   *
   * @param cron Cron defining the schedule to run the executions.
   * @return The same instance of this {@link AiExecutionSchedule} class
   */
  @Nonnull
  public AiExecutionSchedule cron(@Nonnull final String cron) {
    this.cron = cron;
    return this;
  }

  /**
   * Cron defining the schedule to run the executions.
   *
   * @return cron The cron of this {@link AiExecutionSchedule} instance.
   */
  @Nonnull
  public String getCron() {
    return cron;
  }

  /**
   * Set the cron of this {@link AiExecutionSchedule} instance.
   *
   * @param cron Cron defining the schedule to run the executions.
   */
  public void setCron(@Nonnull final String cron) {
    this.cron = cron;
  }

  /**
   * Set the name of this {@link AiExecutionSchedule} instance and return the same instance.
   *
   * @param name Name of the execution schedule
   * @return The same instance of this {@link AiExecutionSchedule} class
   */
  @Nonnull
  public AiExecutionSchedule name(@Nonnull final String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the execution schedule
   *
   * @return name The name of this {@link AiExecutionSchedule} instance.
   */
  @Nonnull
  public String getName() {
    return name;
  }

  /**
   * Set the name of this {@link AiExecutionSchedule} instance.
   *
   * @param name Name of the execution schedule
   */
  public void setName(@Nonnull final String name) {
    this.name = name;
  }

  /**
   * Set the configurationId of this {@link AiExecutionSchedule} instance and return the same
   * instance.
   *
   * @param configurationId ID of the configuration
   * @return The same instance of this {@link AiExecutionSchedule} class
   */
  @Nonnull
  public AiExecutionSchedule configurationId(@Nonnull final String configurationId) {
    this.configurationId = configurationId;
    return this;
  }

  /**
   * ID of the configuration
   *
   * @return configurationId The configurationId of this {@link AiExecutionSchedule} instance.
   */
  @Nonnull
  public String getConfigurationId() {
    return configurationId;
  }

  /**
   * Set the configurationId of this {@link AiExecutionSchedule} instance.
   *
   * @param configurationId ID of the configuration
   */
  public void setConfigurationId(@Nonnull final String configurationId) {
    this.configurationId = configurationId;
  }

  /**
   * Set the start of this {@link AiExecutionSchedule} instance and return the same instance.
   *
   * @param start Timestamp, defining when the executions should start running periodically,
   *     defaults to now
   * @return The same instance of this {@link AiExecutionSchedule} class
   */
  @Nonnull
  public AiExecutionSchedule start(@Nullable final OffsetDateTime start) {
    this.start = start;
    return this;
  }

  /**
   * Timestamp, defining when the executions should start running periodically, defaults to now
   *
   * @return start The start of this {@link AiExecutionSchedule} instance.
   */
  @Nonnull
  public OffsetDateTime getStart() {
    return start;
  }

  /**
   * Set the start of this {@link AiExecutionSchedule} instance.
   *
   * @param start Timestamp, defining when the executions should start running periodically,
   *     defaults to now
   */
  public void setStart(@Nullable final OffsetDateTime start) {
    this.start = start;
  }

  /**
   * Set the end of this {@link AiExecutionSchedule} instance and return the same instance.
   *
   * @param end Timestamp, defining when the executions should stop running
   * @return The same instance of this {@link AiExecutionSchedule} class
   */
  @Nonnull
  public AiExecutionSchedule end(@Nullable final OffsetDateTime end) {
    this.end = end;
    return this;
  }

  /**
   * Timestamp, defining when the executions should stop running
   *
   * @return end The end of this {@link AiExecutionSchedule} instance.
   */
  @Nonnull
  public OffsetDateTime getEnd() {
    return end;
  }

  /**
   * Set the end of this {@link AiExecutionSchedule} instance.
   *
   * @param end Timestamp, defining when the executions should stop running
   */
  public void setEnd(@Nullable final OffsetDateTime end) {
    this.end = end;
  }

  /**
   * Set the id of this {@link AiExecutionSchedule} instance and return the same instance.
   *
   * @param id ID of the execution schedule
   * @return The same instance of this {@link AiExecutionSchedule} class
   */
  @Nonnull
  public AiExecutionSchedule id(@Nullable final String id) {
    this.id = id;
    return this;
  }

  /**
   * ID of the execution schedule
   *
   * @return id The id of this {@link AiExecutionSchedule} instance.
   */
  @Nonnull
  public String getId() {
    return id;
  }

  /**
   * Set the id of this {@link AiExecutionSchedule} instance.
   *
   * @param id ID of the execution schedule
   */
  public void setId(@Nullable final String id) {
    this.id = id;
  }

  /**
   * Set the status of this {@link AiExecutionSchedule} instance and return the same instance.
   *
   * @param status The status of this {@link AiExecutionSchedule}
   * @return The same instance of this {@link AiExecutionSchedule} class
   */
  @Nonnull
  public AiExecutionSchedule status(@Nullable final AiExecutionScheduleStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   *
   * @return status The status of this {@link AiExecutionSchedule} instance.
   */
  @Nonnull
  public AiExecutionScheduleStatus getStatus() {
    return status;
  }

  /**
   * Set the status of this {@link AiExecutionSchedule} instance.
   *
   * @param status The status of this {@link AiExecutionSchedule}
   */
  public void setStatus(@Nullable final AiExecutionScheduleStatus status) {
    this.status = status;
  }

  /**
   * Set the createdAt of this {@link AiExecutionSchedule} instance and return the same instance.
   *
   * @param createdAt Timestamp of resource creation
   * @return The same instance of this {@link AiExecutionSchedule} class
   */
  @Nonnull
  public AiExecutionSchedule createdAt(@Nonnull final OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Timestamp of resource creation
   *
   * @return createdAt The createdAt of this {@link AiExecutionSchedule} instance.
   */
  @Nonnull
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  /**
   * Set the createdAt of this {@link AiExecutionSchedule} instance.
   *
   * @param createdAt Timestamp of resource creation
   */
  public void setCreatedAt(@Nonnull final OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  /**
   * Set the modifiedAt of this {@link AiExecutionSchedule} instance and return the same instance.
   *
   * @param modifiedAt Timestamp of latest resource modification
   * @return The same instance of this {@link AiExecutionSchedule} class
   */
  @Nonnull
  public AiExecutionSchedule modifiedAt(@Nonnull final OffsetDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

  /**
   * Timestamp of latest resource modification
   *
   * @return modifiedAt The modifiedAt of this {@link AiExecutionSchedule} instance.
   */
  @Nonnull
  public OffsetDateTime getModifiedAt() {
    return modifiedAt;
  }

  /**
   * Set the modifiedAt of this {@link AiExecutionSchedule} instance.
   *
   * @param modifiedAt Timestamp of latest resource modification
   */
  public void setModifiedAt(@Nonnull final OffsetDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link AiExecutionSchedule}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link AiExecutionSchedule} instance.
   *
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException(
          "AiExecutionSchedule has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Set an unrecognizable property of this {@link AiExecutionSchedule} instance. If the map
   * previously contained a mapping for the key, the old value is replaced by the specified value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final AiExecutionSchedule aiExecutionSchedule = (AiExecutionSchedule) o;
    return Objects.equals(this.cloudSdkCustomFields, aiExecutionSchedule.cloudSdkCustomFields)
        && Objects.equals(this.cron, aiExecutionSchedule.cron)
        && Objects.equals(this.name, aiExecutionSchedule.name)
        && Objects.equals(this.configurationId, aiExecutionSchedule.configurationId)
        && Objects.equals(this.start, aiExecutionSchedule.start)
        && Objects.equals(this.end, aiExecutionSchedule.end)
        && Objects.equals(this.id, aiExecutionSchedule.id)
        && Objects.equals(this.status, aiExecutionSchedule.status)
        && Objects.equals(this.createdAt, aiExecutionSchedule.createdAt)
        && Objects.equals(this.modifiedAt, aiExecutionSchedule.modifiedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        cron,
        name,
        configurationId,
        start,
        end,
        id,
        status,
        createdAt,
        modifiedAt,
        cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class AiExecutionSchedule {\n");
    sb.append("    cron: ").append(toIndentedString(cron)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    configurationId: ").append(toIndentedString(configurationId)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create a type-safe, fluent-api builder object to construct a new {@link AiExecutionSchedule}
   * instance with all required arguments.
   */
  public static Builder create() {
    return (cron) ->
        (name) ->
            (configurationId) ->
                (createdAt) ->
                    (modifiedAt) ->
                        new AiExecutionSchedule()
                            .cron(cron)
                            .name(name)
                            .configurationId(configurationId)
                            .createdAt(createdAt)
                            .modifiedAt(modifiedAt);
  }

  /** Builder helper class. */
  public interface Builder {
    /**
     * Set the cron of this {@link AiExecutionSchedule} instance.
     *
     * @param cron Cron defining the schedule to run the executions.
     * @return The AiExecutionSchedule builder.
     */
    Builder1 cron(@Nonnull final String cron);
  }

  /** Builder helper class. */
  public interface Builder1 {
    /**
     * Set the name of this {@link AiExecutionSchedule} instance.
     *
     * @param name Name of the execution schedule
     * @return The AiExecutionSchedule builder.
     */
    Builder2 name(@Nonnull final String name);
  }

  /** Builder helper class. */
  public interface Builder2 {
    /**
     * Set the configurationId of this {@link AiExecutionSchedule} instance.
     *
     * @param configurationId ID of the configuration
     * @return The AiExecutionSchedule builder.
     */
    Builder3 configurationId(@Nonnull final String configurationId);
  }

  /** Builder helper class. */
  public interface Builder3 {
    /**
     * Set the createdAt of this {@link AiExecutionSchedule} instance.
     *
     * @param createdAt Timestamp of resource creation
     * @return The AiExecutionSchedule builder.
     */
    Builder4 createdAt(@Nonnull final OffsetDateTime createdAt);
  }

  /** Builder helper class. */
  public interface Builder4 {
    /**
     * Set the modifiedAt of this {@link AiExecutionSchedule} instance.
     *
     * @param modifiedAt Timestamp of latest resource modification
     * @return The AiExecutionSchedule instance.
     */
    AiExecutionSchedule modifiedAt(@Nonnull final OffsetDateTime modifiedAt);
  }
}
