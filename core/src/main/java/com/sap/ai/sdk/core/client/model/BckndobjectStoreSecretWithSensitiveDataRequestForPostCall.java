/*
 * AI Core
 * Provides tools to manage your scenarios and workflows in SAP AI Core. Execute pipelines as a batch job, for example to pre-process or train your models, or perform batch inference.  Serve inference requests of trained models. Deploy Ð° trained machine learning model as a web service to serve inference requests with high performance.  Register your own Docker registry, synchronize your AI content from your own git repository, and register your own object store for training data and trained models.
 *
 * The version of the OpenAPI document: 2.36.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.core.client.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/** This represents all the meta-data and extra information to be stored as a k8-secret */
// CHECKSTYLE:OFF
public class BckndobjectStoreSecretWithSensitiveDataRequestForPostCall
// CHECKSTYLE:ON
{
  @JsonProperty("name")
  private String name;

  @JsonProperty("type")
  private String type;

  @JsonProperty("bucket")
  private String bucket;

  @JsonProperty("endpoint")
  private String endpoint;

  @JsonProperty("region")
  private String region;

  @JsonProperty("pathPrefix")
  private String pathPrefix;

  @JsonProperty("verifyssl")
  private String verifyssl;

  @JsonProperty("usehttps")
  private String usehttps = "1";

  @JsonProperty("data")
  private Object data;

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /** Default constructor for BckndobjectStoreSecretWithSensitiveDataRequestForPostCall. */
  protected BckndobjectStoreSecretWithSensitiveDataRequestForPostCall() {}

  /**
   * Set the name of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} instance
   * and return the same instance.
   *
   * @param name Name of the object store for the secret object to be created. Can be used later on
   *     check for existence of the secret.
   * @return The same instance of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} class
   */
  @Nonnull
  public BckndobjectStoreSecretWithSensitiveDataRequestForPostCall name(
      @Nonnull final String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the object store for the secret object to be created. Can be used later on check for
   * existence of the secret.
   *
   * @return name The name of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   *     instance.
   */
  @Nonnull
  public String getName() {
    return name;
  }

  /**
   * Set the name of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance.
   *
   * @param name Name of the object store for the secret object to be created. Can be used later on
   *     check for existence of the secret.
   */
  public void setName(@Nonnull final String name) {
    this.name = name;
  }

  /**
   * Set the type of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} instance
   * and return the same instance.
   *
   * @param type Storage type e.g. S3, GCS,...
   * @return The same instance of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} class
   */
  @Nonnull
  public BckndobjectStoreSecretWithSensitiveDataRequestForPostCall type(
      @Nonnull final String type) {
    this.type = type;
    return this;
  }

  /**
   * Storage type e.g. S3, GCS,...
   *
   * @return type The type of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   *     instance.
   */
  @Nonnull
  public String getType() {
    return type;
  }

  /**
   * Set the type of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance.
   *
   * @param type Storage type e.g. S3, GCS,...
   */
  public void setType(@Nonnull final String type) {
    this.type = type;
  }

  /**
   * Set the bucket of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance and return the same instance.
   *
   * @param bucket Bucket to be used
   * @return The same instance of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} class
   */
  @Nonnull
  public BckndobjectStoreSecretWithSensitiveDataRequestForPostCall bucket(
      @Nullable final String bucket) {
    this.bucket = bucket;
    return this;
  }

  /**
   * Bucket to be used
   *
   * @return bucket The bucket of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} instance.
   */
  @Nonnull
  public String getBucket() {
    return bucket;
  }

  /**
   * Set the bucket of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance.
   *
   * @param bucket Bucket to be used
   */
  public void setBucket(@Nullable final String bucket) {
    this.bucket = bucket;
  }

  /**
   * Set the endpoint of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance and return the same instance.
   *
   * @param endpoint Optional parameter - URL of the storage server (S3 only)
   * @return The same instance of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} class
   */
  @Nonnull
  public BckndobjectStoreSecretWithSensitiveDataRequestForPostCall endpoint(
      @Nullable final String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * Optional parameter - URL of the storage server (S3 only)
   *
   * @return endpoint The endpoint of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} instance.
   */
  @Nonnull
  public String getEndpoint() {
    return endpoint;
  }

  /**
   * Set the endpoint of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance.
   *
   * @param endpoint Optional parameter - URL of the storage server (S3 only)
   */
  public void setEndpoint(@Nullable final String endpoint) {
    this.endpoint = endpoint;
  }

  /**
   * Set the region of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance and return the same instance.
   *
   * @param region Optional parameter - Region of the storage server (S3 only)
   * @return The same instance of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} class
   */
  @Nonnull
  public BckndobjectStoreSecretWithSensitiveDataRequestForPostCall region(
      @Nullable final String region) {
    this.region = region;
    return this;
  }

  /**
   * Optional parameter - Region of the storage server (S3 only)
   *
   * @return region The region of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} instance.
   */
  @Nonnull
  public String getRegion() {
    return region;
  }

  /**
   * Set the region of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance.
   *
   * @param region Optional parameter - Region of the storage server (S3 only)
   */
  public void setRegion(@Nullable final String region) {
    this.region = region;
  }

  /**
   * Set the pathPrefix of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance and return the same instance.
   *
   * @param pathPrefix prefix folder to be added to storage path
   * @return The same instance of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} class
   */
  @Nonnull
  public BckndobjectStoreSecretWithSensitiveDataRequestForPostCall pathPrefix(
      @Nullable final String pathPrefix) {
    this.pathPrefix = pathPrefix;
    return this;
  }

  /**
   * prefix folder to be added to storage path
   *
   * @return pathPrefix The pathPrefix of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} instance.
   */
  @Nonnull
  public String getPathPrefix() {
    return pathPrefix;
  }

  /**
   * Set the pathPrefix of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance.
   *
   * @param pathPrefix prefix folder to be added to storage path
   */
  public void setPathPrefix(@Nullable final String pathPrefix) {
    this.pathPrefix = pathPrefix;
  }

  /**
   * Set the verifyssl of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance and return the same instance.
   *
   * @param verifyssl 0, 1 flag for the KF-serving annotation - serving.kubeflow.org/s3-verifyssl
   * @return The same instance of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} class
   */
  @Nonnull
  public BckndobjectStoreSecretWithSensitiveDataRequestForPostCall verifyssl(
      @Nullable final String verifyssl) {
    this.verifyssl = verifyssl;
    return this;
  }

  /**
   * 0, 1 flag for the KF-serving annotation - serving.kubeflow.org/s3-verifyssl
   *
   * @return verifyssl The verifyssl of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} instance.
   */
  @Nonnull
  public String getVerifyssl() {
    return verifyssl;
  }

  /**
   * Set the verifyssl of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance.
   *
   * @param verifyssl 0, 1 flag for the KF-serving annotation - serving.kubeflow.org/s3-verifyssl
   */
  public void setVerifyssl(@Nullable final String verifyssl) {
    this.verifyssl = verifyssl;
  }

  /**
   * Set the usehttps of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance and return the same instance.
   *
   * @param usehttps 0, 1 flag for KF-serving annotations - serving.kubeflow.org/s3-usehttps
   * @return The same instance of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} class
   */
  @Nonnull
  public BckndobjectStoreSecretWithSensitiveDataRequestForPostCall usehttps(
      @Nullable final String usehttps) {
    this.usehttps = usehttps;
    return this;
  }

  /**
   * 0, 1 flag for KF-serving annotations - serving.kubeflow.org/s3-usehttps
   *
   * @return usehttps The usehttps of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} instance.
   */
  @Nonnull
  public String getUsehttps() {
    return usehttps;
  }

  /**
   * Set the usehttps of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance.
   *
   * @param usehttps 0, 1 flag for KF-serving annotations - serving.kubeflow.org/s3-usehttps
   */
  public void setUsehttps(@Nullable final String usehttps) {
    this.usehttps = usehttps;
  }

  /**
   * Set the data of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} instance
   * and return the same instance.
   *
   * @param data key:value pairs of data
   * @return The same instance of this {@link
   *     BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} class
   */
  @Nonnull
  public BckndobjectStoreSecretWithSensitiveDataRequestForPostCall data(
      @Nonnull final Object data) {
    this.data = data;
    return this;
  }

  /**
   * key:value pairs of data
   *
   * @return data The data of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   *     instance.
   */
  @Nonnull
  public Object getData() {
    return data;
  }

  /**
   * Set the data of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
   * instance.
   *
   * @param data key:value pairs of data
   */
  public void setData(@Nonnull final Object data) {
    this.data = data;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link
   * BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link
   * BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} instance.
   *
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException(
          "BckndobjectStoreSecretWithSensitiveDataRequestForPostCall has no field with name '"
              + name
              + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Set an unrecognizable property of this {@link
   * BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} instance. If the map previously
   * contained a mapping for the key, the old value is replaced by the specified value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final BckndobjectStoreSecretWithSensitiveDataRequestForPostCall
        bckndobjectStoreSecretWithSensitiveDataRequestForPostCall =
            (BckndobjectStoreSecretWithSensitiveDataRequestForPostCall) o;
    return Objects.equals(
            this.cloudSdkCustomFields,
            bckndobjectStoreSecretWithSensitiveDataRequestForPostCall.cloudSdkCustomFields)
        && Objects.equals(this.name, bckndobjectStoreSecretWithSensitiveDataRequestForPostCall.name)
        && Objects.equals(this.type, bckndobjectStoreSecretWithSensitiveDataRequestForPostCall.type)
        && Objects.equals(
            this.bucket, bckndobjectStoreSecretWithSensitiveDataRequestForPostCall.bucket)
        && Objects.equals(
            this.endpoint, bckndobjectStoreSecretWithSensitiveDataRequestForPostCall.endpoint)
        && Objects.equals(
            this.region, bckndobjectStoreSecretWithSensitiveDataRequestForPostCall.region)
        && Objects.equals(
            this.pathPrefix, bckndobjectStoreSecretWithSensitiveDataRequestForPostCall.pathPrefix)
        && Objects.equals(
            this.verifyssl, bckndobjectStoreSecretWithSensitiveDataRequestForPostCall.verifyssl)
        && Objects.equals(
            this.usehttps, bckndobjectStoreSecretWithSensitiveDataRequestForPostCall.usehttps)
        && Objects.equals(
            this.data, bckndobjectStoreSecretWithSensitiveDataRequestForPostCall.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        name,
        type,
        bucket,
        endpoint,
        region,
        pathPrefix,
        verifyssl,
        usehttps,
        data,
        cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class BckndobjectStoreSecretWithSensitiveDataRequestForPostCall {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    pathPrefix: ").append(toIndentedString(pathPrefix)).append("\n");
    sb.append("    verifyssl: ").append(toIndentedString(verifyssl)).append("\n");
    sb.append("    usehttps: ").append(toIndentedString(usehttps)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create a type-safe, fluent-api builder object to construct a new {@link
   * BckndobjectStoreSecretWithSensitiveDataRequestForPostCall} instance with all required
   * arguments.
   */
  public static Builder create() {
    return (name) ->
        (type) ->
            (data) ->
                new BckndobjectStoreSecretWithSensitiveDataRequestForPostCall()
                    .name(name)
                    .type(type)
                    .data(data);
  }

  /** Builder helper class. */
  public interface Builder {
    /**
     * Set the name of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
     * instance.
     *
     * @param name Name of the object store for the secret object to be created. Can be used later
     *     on check for existence of the secret.
     * @return The BckndobjectStoreSecretWithSensitiveDataRequestForPostCall builder.
     */
    Builder1 name(@Nonnull final String name);
  }

  /** Builder helper class. */
  public interface Builder1 {
    /**
     * Set the type of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
     * instance.
     *
     * @param type Storage type e.g. S3, GCS,...
     * @return The BckndobjectStoreSecretWithSensitiveDataRequestForPostCall builder.
     */
    Builder2 type(@Nonnull final String type);
  }

  /** Builder helper class. */
  public interface Builder2 {
    /**
     * Set the data of this {@link BckndobjectStoreSecretWithSensitiveDataRequestForPostCall}
     * instance.
     *
     * @param data key:value pairs of data
     * @return The BckndobjectStoreSecretWithSensitiveDataRequestForPostCall instance.
     */
    BckndobjectStoreSecretWithSensitiveDataRequestForPostCall data(@Nonnull final Object data);
  }
}
