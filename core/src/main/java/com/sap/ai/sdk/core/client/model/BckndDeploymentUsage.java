/*
 * AI Core
 * Provides tools to manage your scenarios and workflows in SAP AI Core. Execute pipelines as a batch job, for example to pre-process or train your models, or perform batch inference.  Serve inference requests of trained models. Deploy Ð° trained machine learning model as a web service to serve inference requests with high performance.  Register your own Docker registry, synchronize your AI content from your own git repository, and register your own object store for training data and trained models.
 *
 * The version of the OpenAPI document: 2.36.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.core.client.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/** BckndDeploymentUsage */
// CHECKSTYLE:OFF
public class BckndDeploymentUsage
// CHECKSTYLE:ON
{
  @JsonProperty("count")
  private Integer count;

  @JsonProperty("items")
  private List<BckndUsageResourcePlanItem> items = new ArrayList<>();

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /** Default constructor for BckndDeploymentUsage. */
  protected BckndDeploymentUsage() {}

  /**
   * Set the count of this {@link BckndDeploymentUsage} instance and return the same instance.
   *
   * @param count The count of this {@link BckndDeploymentUsage}
   * @return The same instance of this {@link BckndDeploymentUsage} class
   */
  @Nonnull
  public BckndDeploymentUsage count(@Nonnull final Integer count) {
    this.count = count;
    return this;
  }

  /**
   * Get count
   *
   * @return count The count of this {@link BckndDeploymentUsage} instance.
   */
  @Nonnull
  public Integer getCount() {
    return count;
  }

  /**
   * Set the count of this {@link BckndDeploymentUsage} instance.
   *
   * @param count The count of this {@link BckndDeploymentUsage}
   */
  public void setCount(@Nonnull final Integer count) {
    this.count = count;
  }

  /**
   * Set the items of this {@link BckndDeploymentUsage} instance and return the same instance.
   *
   * @param items The items of this {@link BckndDeploymentUsage}
   * @return The same instance of this {@link BckndDeploymentUsage} class
   */
  @Nonnull
  public BckndDeploymentUsage items(@Nonnull final List<BckndUsageResourcePlanItem> items) {
    this.items = items;
    return this;
  }

  /**
   * Add one items instance to this {@link BckndDeploymentUsage}.
   *
   * @param itemsItem The items that should be added
   * @return The same instance of type {@link BckndDeploymentUsage}
   */
  @Nonnull
  public BckndDeploymentUsage addItemsItem(@Nonnull final BckndUsageResourcePlanItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
   * Get items
   *
   * @return items The items of this {@link BckndDeploymentUsage} instance.
   */
  @Nonnull
  public List<BckndUsageResourcePlanItem> getItems() {
    return items;
  }

  /**
   * Set the items of this {@link BckndDeploymentUsage} instance.
   *
   * @param items The items of this {@link BckndDeploymentUsage}
   */
  public void setItems(@Nonnull final List<BckndUsageResourcePlanItem> items) {
    this.items = items;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link BckndDeploymentUsage}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link BckndDeploymentUsage} instance.
   *
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException(
          "BckndDeploymentUsage has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Set an unrecognizable property of this {@link BckndDeploymentUsage} instance. If the map
   * previously contained a mapping for the key, the old value is replaced by the specified value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final BckndDeploymentUsage bckndDeploymentUsage = (BckndDeploymentUsage) o;
    return Objects.equals(this.cloudSdkCustomFields, bckndDeploymentUsage.cloudSdkCustomFields)
        && Objects.equals(this.count, bckndDeploymentUsage.count)
        && Objects.equals(this.items, bckndDeploymentUsage.items);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, items, cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class BckndDeploymentUsage {\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create a type-safe, fluent-api builder object to construct a new {@link BckndDeploymentUsage}
   * instance with all required arguments.
   */
  public static Builder create() {
    return (count) -> (items) -> new BckndDeploymentUsage().count(count).items(items);
  }

  /** Builder helper class. */
  public interface Builder {
    /**
     * Set the count of this {@link BckndDeploymentUsage} instance.
     *
     * @param count The count of this {@link BckndDeploymentUsage}
     * @return The BckndDeploymentUsage builder.
     */
    Builder1 count(@Nonnull final Integer count);
  }

  /** Builder helper class. */
  public interface Builder1 {
    /**
     * Set the items of this {@link BckndDeploymentUsage} instance.
     *
     * @param items The items of this {@link BckndDeploymentUsage}
     * @return The BckndDeploymentUsage instance.
     */
    BckndDeploymentUsage items(@Nonnull final List<BckndUsageResourcePlanItem> items);

    /**
     * Set the items of this {@link BckndDeploymentUsage} instance.
     *
     * @param items The items of this {@link BckndDeploymentUsage}
     * @return The BckndDeploymentUsage instance.
     */
    default BckndDeploymentUsage items(@Nonnull final BckndUsageResourcePlanItem... items) {
      return items(Arrays.asList(items));
    }
  }
}
