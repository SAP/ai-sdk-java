/*
 * Document Grounding Pipeline API
 * SAP AI Core - API Specification AI Data Management api's
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.grounding.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/** Limit scope of search to certain DataRepositories, Documents or Chunks. */
// CHECKSTYLE:OFF
public class RetrievalSearchFilter
// CHECKSTYLE:ON
{
  @JsonProperty("id")
  private String id;

  @JsonProperty("searchConfiguration")
  private SearchConfiguration searchConfiguration;

  @JsonProperty("dataRepositories")
  private List<String> dataRepositories = new ArrayList<>(Arrays.asList("*"));

  @JsonProperty("dataRepositoryType")
  private DataRepositoryType dataRepositoryType;

  @JsonProperty("dataRepositoryMetadata")
  private List<KeyValueListPair> dataRepositoryMetadata = new ArrayList<>();

  @JsonProperty("documentMetadata")
  private List<SearchDocumentKeyValueListPair> documentMetadata = new ArrayList<>();

  @JsonProperty("chunkMetadata")
  private List<KeyValueListPair> chunkMetadata = new ArrayList<>();

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /** Default constructor for RetrievalSearchFilter. */
  protected RetrievalSearchFilter() {}

  /**
   * Set the id of this {@link RetrievalSearchFilter} instance and return the same instance.
   *
   * @param id Identifier of this SearchFilter - unique per request.
   * @return The same instance of this {@link RetrievalSearchFilter} class
   */
  @Nonnull
  public RetrievalSearchFilter id(@Nonnull final String id) {
    this.id = id;
    return this;
  }

  /**
   * Identifier of this SearchFilter - unique per request.
   *
   * @return id The id of this {@link RetrievalSearchFilter} instance.
   */
  @Nonnull
  public String getId() {
    return id;
  }

  /**
   * Set the id of this {@link RetrievalSearchFilter} instance.
   *
   * @param id Identifier of this SearchFilter - unique per request.
   */
  public void setId(@Nonnull final String id) {
    this.id = id;
  }

  /**
   * Set the searchConfiguration of this {@link RetrievalSearchFilter} instance and return the same
   * instance.
   *
   * @param searchConfiguration The searchConfiguration of this {@link RetrievalSearchFilter}
   * @return The same instance of this {@link RetrievalSearchFilter} class
   */
  @Nonnull
  public RetrievalSearchFilter searchConfiguration(
      @Nullable final SearchConfiguration searchConfiguration) {
    this.searchConfiguration = searchConfiguration;
    return this;
  }

  /**
   * Get searchConfiguration
   *
   * @return searchConfiguration The searchConfiguration of this {@link RetrievalSearchFilter}
   *     instance.
   */
  @Nonnull
  public SearchConfiguration getSearchConfiguration() {
    return searchConfiguration;
  }

  /**
   * Set the searchConfiguration of this {@link RetrievalSearchFilter} instance.
   *
   * @param searchConfiguration The searchConfiguration of this {@link RetrievalSearchFilter}
   */
  public void setSearchConfiguration(@Nullable final SearchConfiguration searchConfiguration) {
    this.searchConfiguration = searchConfiguration;
  }

  /**
   * Set the dataRepositories of this {@link RetrievalSearchFilter} instance and return the same
   * instance.
   *
   * @param dataRepositories Specify [&#39;*&#39;] to search across all DataRepositories or give a
   *     specific list of DataRepository ids.
   * @return The same instance of this {@link RetrievalSearchFilter} class
   */
  @Nonnull
  public RetrievalSearchFilter dataRepositories(@Nullable final List<String> dataRepositories) {
    this.dataRepositories = dataRepositories;
    return this;
  }

  /**
   * Add one dataRepositories instance to this {@link RetrievalSearchFilter}.
   *
   * @param dataRepositoriesItem The dataRepositories that should be added
   * @return The same instance of type {@link RetrievalSearchFilter}
   */
  @Nonnull
  public RetrievalSearchFilter addDataRepositoriesItem(@Nonnull final String dataRepositoriesItem) {
    if (this.dataRepositories == null) {
      this.dataRepositories = new ArrayList<>(Arrays.asList("*"));
    }
    this.dataRepositories.add(dataRepositoriesItem);
    return this;
  }

  /**
   * Specify [&#39;*&#39;] to search across all DataRepositories or give a specific list of
   * DataRepository ids.
   *
   * @return dataRepositories The dataRepositories of this {@link RetrievalSearchFilter} instance.
   */
  @Nonnull
  public List<String> getDataRepositories() {
    return dataRepositories;
  }

  /**
   * Set the dataRepositories of this {@link RetrievalSearchFilter} instance.
   *
   * @param dataRepositories Specify [&#39;*&#39;] to search across all DataRepositories or give a
   *     specific list of DataRepository ids.
   */
  public void setDataRepositories(@Nullable final List<String> dataRepositories) {
    this.dataRepositories = dataRepositories;
  }

  /**
   * Set the dataRepositoryType of this {@link RetrievalSearchFilter} instance and return the same
   * instance.
   *
   * @param dataRepositoryType The dataRepositoryType of this {@link RetrievalSearchFilter}
   * @return The same instance of this {@link RetrievalSearchFilter} class
   */
  @Nonnull
  public RetrievalSearchFilter dataRepositoryType(
      @Nullable final DataRepositoryType dataRepositoryType) {
    this.dataRepositoryType = dataRepositoryType;
    return this;
  }

  /**
   * Get dataRepositoryType
   *
   * @return dataRepositoryType The dataRepositoryType of this {@link RetrievalSearchFilter}
   *     instance.
   */
  @Nullable
  public DataRepositoryType getDataRepositoryType() {
    return dataRepositoryType;
  }

  /**
   * Set the dataRepositoryType of this {@link RetrievalSearchFilter} instance.
   *
   * @param dataRepositoryType The dataRepositoryType of this {@link RetrievalSearchFilter}
   */
  public void setDataRepositoryType(@Nullable final DataRepositoryType dataRepositoryType) {
    this.dataRepositoryType = dataRepositoryType;
  }

  /**
   * Set the dataRepositoryMetadata of this {@link RetrievalSearchFilter} instance and return the
   * same instance.
   *
   * @param dataRepositoryMetadata Restrict DataRepositories considered during search to those
   *     annotated with the given metadata. Useful when combined with
   *     dataRepositories&#x3D;[&#39;*&#39;]
   * @return The same instance of this {@link RetrievalSearchFilter} class
   */
  @Nonnull
  public RetrievalSearchFilter dataRepositoryMetadata(
      @Nullable final List<KeyValueListPair> dataRepositoryMetadata) {
    this.dataRepositoryMetadata = dataRepositoryMetadata;
    return this;
  }

  /**
   * Add one dataRepositoryMetadata instance to this {@link RetrievalSearchFilter}.
   *
   * @param dataRepositoryMetadataItem The dataRepositoryMetadata that should be added
   * @return The same instance of type {@link RetrievalSearchFilter}
   */
  @Nonnull
  public RetrievalSearchFilter addDataRepositoryMetadataItem(
      @Nonnull final KeyValueListPair dataRepositoryMetadataItem) {
    if (this.dataRepositoryMetadata == null) {
      this.dataRepositoryMetadata = new ArrayList<>();
    }
    this.dataRepositoryMetadata.add(dataRepositoryMetadataItem);
    return this;
  }

  /**
   * Restrict DataRepositories considered during search to those annotated with the given metadata.
   * Useful when combined with dataRepositories&#x3D;[&#39;*&#39;]
   *
   * @return dataRepositoryMetadata The dataRepositoryMetadata of this {@link RetrievalSearchFilter}
   *     instance.
   */
  @Nonnull
  public List<KeyValueListPair> getDataRepositoryMetadata() {
    return dataRepositoryMetadata;
  }

  /**
   * Set the dataRepositoryMetadata of this {@link RetrievalSearchFilter} instance.
   *
   * @param dataRepositoryMetadata Restrict DataRepositories considered during search to those
   *     annotated with the given metadata. Useful when combined with
   *     dataRepositories&#x3D;[&#39;*&#39;]
   */
  public void setDataRepositoryMetadata(
      @Nullable final List<KeyValueListPair> dataRepositoryMetadata) {
    this.dataRepositoryMetadata = dataRepositoryMetadata;
  }

  /**
   * Set the documentMetadata of this {@link RetrievalSearchFilter} instance and return the same
   * instance.
   *
   * @param documentMetadata Restrict documents considered during search to those annotated with the
   *     given metadata.
   * @return The same instance of this {@link RetrievalSearchFilter} class
   */
  @Nonnull
  public RetrievalSearchFilter documentMetadata(
      @Nullable final List<SearchDocumentKeyValueListPair> documentMetadata) {
    this.documentMetadata = documentMetadata;
    return this;
  }

  /**
   * Add one documentMetadata instance to this {@link RetrievalSearchFilter}.
   *
   * @param documentMetadataItem The documentMetadata that should be added
   * @return The same instance of type {@link RetrievalSearchFilter}
   */
  @Nonnull
  public RetrievalSearchFilter addDocumentMetadataItem(
      @Nonnull final SearchDocumentKeyValueListPair documentMetadataItem) {
    if (this.documentMetadata == null) {
      this.documentMetadata = new ArrayList<>();
    }
    this.documentMetadata.add(documentMetadataItem);
    return this;
  }

  /**
   * Restrict documents considered during search to those annotated with the given metadata.
   *
   * @return documentMetadata The documentMetadata of this {@link RetrievalSearchFilter} instance.
   */
  @Nonnull
  public List<SearchDocumentKeyValueListPair> getDocumentMetadata() {
    return documentMetadata;
  }

  /**
   * Set the documentMetadata of this {@link RetrievalSearchFilter} instance.
   *
   * @param documentMetadata Restrict documents considered during search to those annotated with the
   *     given metadata.
   */
  public void setDocumentMetadata(
      @Nullable final List<SearchDocumentKeyValueListPair> documentMetadata) {
    this.documentMetadata = documentMetadata;
  }

  /**
   * Set the chunkMetadata of this {@link RetrievalSearchFilter} instance and return the same
   * instance.
   *
   * @param chunkMetadata Restrict chunks considered during search to those with the given metadata.
   * @return The same instance of this {@link RetrievalSearchFilter} class
   */
  @Nonnull
  public RetrievalSearchFilter chunkMetadata(@Nullable final List<KeyValueListPair> chunkMetadata) {
    this.chunkMetadata = chunkMetadata;
    return this;
  }

  /**
   * Add one chunkMetadata instance to this {@link RetrievalSearchFilter}.
   *
   * @param chunkMetadataItem The chunkMetadata that should be added
   * @return The same instance of type {@link RetrievalSearchFilter}
   */
  @Nonnull
  public RetrievalSearchFilter addChunkMetadataItem(
      @Nonnull final KeyValueListPair chunkMetadataItem) {
    if (this.chunkMetadata == null) {
      this.chunkMetadata = new ArrayList<>();
    }
    this.chunkMetadata.add(chunkMetadataItem);
    return this;
  }

  /**
   * Restrict chunks considered during search to those with the given metadata.
   *
   * @return chunkMetadata The chunkMetadata of this {@link RetrievalSearchFilter} instance.
   */
  @Nonnull
  public List<KeyValueListPair> getChunkMetadata() {
    return chunkMetadata;
  }

  /**
   * Set the chunkMetadata of this {@link RetrievalSearchFilter} instance.
   *
   * @param chunkMetadata Restrict chunks considered during search to those with the given metadata.
   */
  public void setChunkMetadata(@Nullable final List<KeyValueListPair> chunkMetadata) {
    this.chunkMetadata = chunkMetadata;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link RetrievalSearchFilter}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link RetrievalSearchFilter} instance.
   *
   * @deprecated Use {@link #toMap()} instead.
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException(
          "RetrievalSearchFilter has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link RetrievalSearchFilter} instance including
   * unrecognized properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap() {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if (id != null) declaredFields.put("id", id);
    if (searchConfiguration != null) declaredFields.put("searchConfiguration", searchConfiguration);
    if (dataRepositories != null) declaredFields.put("dataRepositories", dataRepositories);
    if (dataRepositoryType != null) declaredFields.put("dataRepositoryType", dataRepositoryType);
    if (dataRepositoryMetadata != null)
      declaredFields.put("dataRepositoryMetadata", dataRepositoryMetadata);
    if (documentMetadata != null) declaredFields.put("documentMetadata", documentMetadata);
    if (chunkMetadata != null) declaredFields.put("chunkMetadata", chunkMetadata);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link RetrievalSearchFilter} instance. If the map
   * previously contained a mapping for the key, the old value is replaced by the specified value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final RetrievalSearchFilter retrievalSearchFilter = (RetrievalSearchFilter) o;
    return Objects.equals(this.cloudSdkCustomFields, retrievalSearchFilter.cloudSdkCustomFields)
        && Objects.equals(this.id, retrievalSearchFilter.id)
        && Objects.equals(this.searchConfiguration, retrievalSearchFilter.searchConfiguration)
        && Objects.equals(this.dataRepositories, retrievalSearchFilter.dataRepositories)
        && Objects.equals(this.dataRepositoryType, retrievalSearchFilter.dataRepositoryType)
        && Objects.equals(this.dataRepositoryMetadata, retrievalSearchFilter.dataRepositoryMetadata)
        && Objects.equals(this.documentMetadata, retrievalSearchFilter.documentMetadata)
        && Objects.equals(this.chunkMetadata, retrievalSearchFilter.chunkMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        id,
        searchConfiguration,
        dataRepositories,
        dataRepositoryType,
        dataRepositoryMetadata,
        documentMetadata,
        chunkMetadata,
        cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class RetrievalSearchFilter {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    searchConfiguration: ")
        .append(toIndentedString(searchConfiguration))
        .append("\n");
    sb.append("    dataRepositories: ").append(toIndentedString(dataRepositories)).append("\n");
    sb.append("    dataRepositoryType: ").append(toIndentedString(dataRepositoryType)).append("\n");
    sb.append("    dataRepositoryMetadata: ")
        .append(toIndentedString(dataRepositoryMetadata))
        .append("\n");
    sb.append("    documentMetadata: ").append(toIndentedString(documentMetadata)).append("\n");
    sb.append("    chunkMetadata: ").append(toIndentedString(chunkMetadata)).append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create a type-safe, fluent-api builder object to construct a new {@link RetrievalSearchFilter}
   * instance with all required arguments.
   */
  public static Builder create() {
    return (id) ->
        (dataRepositoryType) ->
            new RetrievalSearchFilter().id(id).dataRepositoryType(dataRepositoryType);
  }

  /** Builder helper class. */
  public interface Builder {
    /**
     * Set the id of this {@link RetrievalSearchFilter} instance.
     *
     * @param id Identifier of this SearchFilter - unique per request.
     * @return The RetrievalSearchFilter builder.
     */
    Builder1 id(@Nonnull final String id);
  }

  /** Builder helper class. */
  public interface Builder1 {
    /**
     * Set the dataRepositoryType of this {@link RetrievalSearchFilter} instance.
     *
     * @param dataRepositoryType The dataRepositoryType of this {@link RetrievalSearchFilter}
     * @return The RetrievalSearchFilter instance.
     */
    RetrievalSearchFilter dataRepositoryType(@Nullable final DataRepositoryType dataRepositoryType);
  }
}
