/*
 * Grounding
 * Grounding is a service designed to handle data-related tasks, such as grounding and retrieval, using vector databases. It provides specialized data retrieval through these databases, grounding the retrieval process with your own external and context-relevant data. Grounding combines generative AI capabilities with the ability to use real-time, precise data to improve decision-making and business operations for specific AI-driven business solutions.
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.grounding.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/** ResultsInner2 */
// CHECKSTYLE:OFF
public class ResultsInner2
// CHECKSTYLE:ON
{
  @JsonProperty("filterId")
  private String filterId;

  @JsonProperty("results")
  private List<DataRepositorySearchResult> results = new ArrayList<>();

  @JsonProperty("error")
  private PerFilterSearchResultError error;

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /** Default constructor for ResultsInner2. */
  protected ResultsInner2() {}

  /**
   * Set the filterId of this {@link ResultsInner2} instance and return the same instance.
   *
   * @param filterId The filterId of this {@link ResultsInner2}
   * @return The same instance of this {@link ResultsInner2} class
   */
  @Nonnull
  public ResultsInner2 filterId(@Nonnull final String filterId) {
    this.filterId = filterId;
    return this;
  }

  /**
   * Get filterId
   *
   * @return filterId The filterId of this {@link ResultsInner2} instance.
   */
  @Nonnull
  public String getFilterId() {
    return filterId;
  }

  /**
   * Set the filterId of this {@link ResultsInner2} instance.
   *
   * @param filterId The filterId of this {@link ResultsInner2}
   */
  public void setFilterId(@Nonnull final String filterId) {
    this.filterId = filterId;
  }

  /**
   * Set the results of this {@link ResultsInner2} instance and return the same instance.
   *
   * @param results List of returned results.
   * @return The same instance of this {@link ResultsInner2} class
   */
  @Nonnull
  public ResultsInner2 results(@Nullable final List<DataRepositorySearchResult> results) {
    this.results = results;
    return this;
  }

  /**
   * Add one results instance to this {@link ResultsInner2}.
   *
   * @param resultsItem The results that should be added
   * @return The same instance of type {@link ResultsInner2}
   */
  @Nonnull
  public ResultsInner2 addResultsItem(@Nonnull final DataRepositorySearchResult resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<>();
    }
    this.results.add(resultsItem);
    return this;
  }

  /**
   * List of returned results.
   *
   * @return results The results of this {@link ResultsInner2} instance.
   */
  @Nonnull
  public List<DataRepositorySearchResult> getResults() {
    return results;
  }

  /**
   * Set the results of this {@link ResultsInner2} instance.
   *
   * @param results List of returned results.
   */
  public void setResults(@Nullable final List<DataRepositorySearchResult> results) {
    this.results = results;
  }

  /**
   * Set the error of this {@link ResultsInner2} instance and return the same instance.
   *
   * @param error The error of this {@link ResultsInner2}
   * @return The same instance of this {@link ResultsInner2} class
   */
  @Nonnull
  public ResultsInner2 error(@Nullable final PerFilterSearchResultError error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   *
   * @return error The error of this {@link ResultsInner2} instance.
   */
  @Nonnull
  public PerFilterSearchResultError getError() {
    return error;
  }

  /**
   * Set the error of this {@link ResultsInner2} instance.
   *
   * @param error The error of this {@link ResultsInner2}
   */
  public void setError(@Nullable final PerFilterSearchResultError error) {
    this.error = error;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link ResultsInner2}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link ResultsInner2} instance.
   *
   * @deprecated Use {@link #toMap()} instead.
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException("ResultsInner2 has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link ResultsInner2} instance including unrecognized
   * properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap() {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if (filterId != null) declaredFields.put("filterId", filterId);
    if (results != null) declaredFields.put("results", results);
    if (error != null) declaredFields.put("error", error);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link ResultsInner2} instance. If the map previously
   * contained a mapping for the key, the old value is replaced by the specified value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final ResultsInner2 resultsInner2 = (ResultsInner2) o;
    return Objects.equals(this.cloudSdkCustomFields, resultsInner2.cloudSdkCustomFields)
        && Objects.equals(this.filterId, resultsInner2.filterId)
        && Objects.equals(this.results, resultsInner2.results)
        && Objects.equals(this.error, resultsInner2.error);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filterId, results, error, cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class ResultsInner2 {\n");
    sb.append("    filterId: ").append(toIndentedString(filterId)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create a type-safe, fluent-api builder object to construct a new {@link ResultsInner2} instance
   * with all required arguments.
   */
  public static Builder create() {
    return (filterId) -> new ResultsInner2().filterId(filterId);
  }

  /** Builder helper class. */
  public interface Builder {
    /**
     * Set the filterId of this {@link ResultsInner2} instance.
     *
     * @param filterId The filterId of this {@link ResultsInner2}
     * @return The ResultsInner2 instance.
     */
    ResultsInner2 filterId(@Nonnull final String filterId);
  }
}
