/*
 * Grounding
 * Grounding is a service designed to handle data-related tasks, such as grounding and retrieval, using vector databases. It provides specialized data retrieval through these databases, grounding the retrieval process with your own external and context-relevant data. Grounding combines generative AI capabilities with the ability to use real-time, precise data to improve decision-making and business operations for specific AI-driven business solutions.
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.grounding.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/** EmbeddingConfig */
// CHECKSTYLE:OFF
public class EmbeddingConfig
// CHECKSTYLE:ON
{
  @JsonProperty("modelName")
  private String modelName = "text-embedding-ada-002";

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /** Default constructor for EmbeddingConfig. */
  protected EmbeddingConfig() {}

  /**
   * Set the modelName of this {@link EmbeddingConfig} instance and return the same instance.
   *
   * @param modelName The modelName of this {@link EmbeddingConfig}
   * @return The same instance of this {@link EmbeddingConfig} class
   */
  @Nonnull
  public EmbeddingConfig modelName(@Nullable final String modelName) {
    this.modelName = modelName;
    return this;
  }

  /**
   * Get modelName
   *
   * @return modelName The modelName of this {@link EmbeddingConfig} instance.
   */
  @Nonnull
  public String getModelName() {
    return modelName;
  }

  /**
   * Set the modelName of this {@link EmbeddingConfig} instance.
   *
   * @param modelName The modelName of this {@link EmbeddingConfig}
   */
  public void setModelName(@Nullable final String modelName) {
    this.modelName = modelName;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link EmbeddingConfig}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link EmbeddingConfig} instance.
   *
   * @deprecated Use {@link #toMap()} instead.
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException("EmbeddingConfig has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link EmbeddingConfig} instance including unrecognized
   * properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap() {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if (modelName != null) declaredFields.put("modelName", modelName);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link EmbeddingConfig} instance. If the map previously
   * contained a mapping for the key, the old value is replaced by the specified value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final EmbeddingConfig embeddingConfig = (EmbeddingConfig) o;
    return Objects.equals(this.cloudSdkCustomFields, embeddingConfig.cloudSdkCustomFields)
        && Objects.equals(this.modelName, embeddingConfig.modelName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelName, cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class EmbeddingConfig {\n");
    sb.append("    modelName: ").append(toIndentedString(modelName)).append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /** Create a new {@link EmbeddingConfig} instance. No arguments are required. */
  public static EmbeddingConfig create() {
    return new EmbeddingConfig();
  }
}
