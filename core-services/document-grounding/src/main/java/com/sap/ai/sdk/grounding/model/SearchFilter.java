/*
 * Document Grounding Pipeline API
 * SAP AI Core - API Specification AI Data Management api's
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.grounding.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.annotations.Beta;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/** SearchFilter */
@Beta // CHECKSTYLE:OFF
public class SearchFilter
// CHECKSTYLE:ON
{
  @JsonProperty("id")
  private String id;

  @JsonProperty("collectionIds")
  private List<String> collectionIds = new ArrayList<>();

  @JsonProperty("configuration")
  private SearchConfiguration _configuration;

  @JsonProperty("collectionMetadata")
  private List<KeyValueListPair> collectionMetadata = new ArrayList<>();

  @JsonProperty("documentMetadata")
  private List<SearchDocumentKeyValueListPair> documentMetadata = new ArrayList<>();

  @JsonProperty("chunkMetadata")
  private List<KeyValueListPair> chunkMetadata = new ArrayList<>();

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /** Default constructor for SearchFilter. */
  protected SearchFilter() {}

  /**
   * Set the id of this {@link SearchFilter} instance and return the same instance.
   *
   * @param id Identifier of this SearchFilter - unique per request.
   * @return The same instance of this {@link SearchFilter} class
   */
  @Nonnull
  public SearchFilter id(@Nonnull final String id) {
    this.id = id;
    return this;
  }

  /**
   * Identifier of this SearchFilter - unique per request.
   *
   * @return id The id of this {@link SearchFilter} instance.
   */
  @Nonnull
  public String getId() {
    return id;
  }

  /**
   * Set the id of this {@link SearchFilter} instance.
   *
   * @param id Identifier of this SearchFilter - unique per request.
   */
  public void setId(@Nonnull final String id) {
    this.id = id;
  }

  /**
   * Set the collectionIds of this {@link SearchFilter} instance and return the same instance.
   *
   * @param collectionIds The collectionIds of this {@link SearchFilter}
   * @return The same instance of this {@link SearchFilter} class
   */
  @Nonnull
  public SearchFilter collectionIds(@Nonnull final List<String> collectionIds) {
    this.collectionIds = collectionIds;
    return this;
  }

  /**
   * Add one collectionIds instance to this {@link SearchFilter}.
   *
   * @param collectionIdsItem The collectionIds that should be added
   * @return The same instance of type {@link SearchFilter}
   */
  @Nonnull
  public SearchFilter addCollectionIdsItem(@Nonnull final String collectionIdsItem) {
    if (this.collectionIds == null) {
      this.collectionIds = new ArrayList<>();
    }
    this.collectionIds.add(collectionIdsItem);
    return this;
  }

  /**
   * Get collectionIds
   *
   * @return collectionIds The collectionIds of this {@link SearchFilter} instance.
   */
  @Nonnull
  public List<String> getCollectionIds() {
    return collectionIds;
  }

  /**
   * Set the collectionIds of this {@link SearchFilter} instance.
   *
   * @param collectionIds The collectionIds of this {@link SearchFilter}
   */
  public void setCollectionIds(@Nonnull final List<String> collectionIds) {
    this.collectionIds = collectionIds;
  }

  /**
   * Set the _configuration of this {@link SearchFilter} instance and return the same instance.
   *
   * @param _configuration The _configuration of this {@link SearchFilter}
   * @return The same instance of this {@link SearchFilter} class
   */
  @Nonnull
  public SearchFilter _configuration(@Nonnull final SearchConfiguration _configuration) {
    this._configuration = _configuration;
    return this;
  }

  /**
   * Get _configuration
   *
   * @return _configuration The _configuration of this {@link SearchFilter} instance.
   */
  @Nonnull
  public SearchConfiguration getConfiguration() {
    return _configuration;
  }

  /**
   * Set the _configuration of this {@link SearchFilter} instance.
   *
   * @param _configuration The _configuration of this {@link SearchFilter}
   */
  public void setConfiguration(@Nonnull final SearchConfiguration _configuration) {
    this._configuration = _configuration;
  }

  /**
   * Set the collectionMetadata of this {@link SearchFilter} instance and return the same instance.
   *
   * @param collectionMetadata Restrict collections considered during search to those annotated with
   *     the given metadata. Useful when combined with collections&#x3D;[&#39;*&#39;]
   * @return The same instance of this {@link SearchFilter} class
   */
  @Nonnull
  public SearchFilter collectionMetadata(
      @Nullable final List<KeyValueListPair> collectionMetadata) {
    this.collectionMetadata = collectionMetadata;
    return this;
  }

  /**
   * Add one collectionMetadata instance to this {@link SearchFilter}.
   *
   * @param collectionMetadataItem The collectionMetadata that should be added
   * @return The same instance of type {@link SearchFilter}
   */
  @Nonnull
  public SearchFilter addCollectionMetadataItem(
      @Nonnull final KeyValueListPair collectionMetadataItem) {
    if (this.collectionMetadata == null) {
      this.collectionMetadata = new ArrayList<>();
    }
    this.collectionMetadata.add(collectionMetadataItem);
    return this;
  }

  /**
   * Restrict collections considered during search to those annotated with the given metadata.
   * Useful when combined with collections&#x3D;[&#39;*&#39;]
   *
   * @return collectionMetadata The collectionMetadata of this {@link SearchFilter} instance.
   */
  @Nonnull
  public List<KeyValueListPair> getCollectionMetadata() {
    return collectionMetadata;
  }

  /**
   * Set the collectionMetadata of this {@link SearchFilter} instance.
   *
   * @param collectionMetadata Restrict collections considered during search to those annotated with
   *     the given metadata. Useful when combined with collections&#x3D;[&#39;*&#39;]
   */
  public void setCollectionMetadata(@Nullable final List<KeyValueListPair> collectionMetadata) {
    this.collectionMetadata = collectionMetadata;
  }

  /**
   * Set the documentMetadata of this {@link SearchFilter} instance and return the same instance.
   *
   * @param documentMetadata Restrict documents considered during search to those annotated with the
   *     given metadata.
   * @return The same instance of this {@link SearchFilter} class
   */
  @Nonnull
  public SearchFilter documentMetadata(
      @Nullable final List<SearchDocumentKeyValueListPair> documentMetadata) {
    this.documentMetadata = documentMetadata;
    return this;
  }

  /**
   * Add one documentMetadata instance to this {@link SearchFilter}.
   *
   * @param documentMetadataItem The documentMetadata that should be added
   * @return The same instance of type {@link SearchFilter}
   */
  @Nonnull
  public SearchFilter addDocumentMetadataItem(
      @Nonnull final SearchDocumentKeyValueListPair documentMetadataItem) {
    if (this.documentMetadata == null) {
      this.documentMetadata = new ArrayList<>();
    }
    this.documentMetadata.add(documentMetadataItem);
    return this;
  }

  /**
   * Restrict documents considered during search to those annotated with the given metadata.
   *
   * @return documentMetadata The documentMetadata of this {@link SearchFilter} instance.
   */
  @Nonnull
  public List<SearchDocumentKeyValueListPair> getDocumentMetadata() {
    return documentMetadata;
  }

  /**
   * Set the documentMetadata of this {@link SearchFilter} instance.
   *
   * @param documentMetadata Restrict documents considered during search to those annotated with the
   *     given metadata.
   */
  public void setDocumentMetadata(
      @Nullable final List<SearchDocumentKeyValueListPair> documentMetadata) {
    this.documentMetadata = documentMetadata;
  }

  /**
   * Set the chunkMetadata of this {@link SearchFilter} instance and return the same instance.
   *
   * @param chunkMetadata Restrict chunks considered during search to those with the given metadata.
   * @return The same instance of this {@link SearchFilter} class
   */
  @Nonnull
  public SearchFilter chunkMetadata(@Nullable final List<KeyValueListPair> chunkMetadata) {
    this.chunkMetadata = chunkMetadata;
    return this;
  }

  /**
   * Add one chunkMetadata instance to this {@link SearchFilter}.
   *
   * @param chunkMetadataItem The chunkMetadata that should be added
   * @return The same instance of type {@link SearchFilter}
   */
  @Nonnull
  public SearchFilter addChunkMetadataItem(@Nonnull final KeyValueListPair chunkMetadataItem) {
    if (this.chunkMetadata == null) {
      this.chunkMetadata = new ArrayList<>();
    }
    this.chunkMetadata.add(chunkMetadataItem);
    return this;
  }

  /**
   * Restrict chunks considered during search to those with the given metadata.
   *
   * @return chunkMetadata The chunkMetadata of this {@link SearchFilter} instance.
   */
  @Nonnull
  public List<KeyValueListPair> getChunkMetadata() {
    return chunkMetadata;
  }

  /**
   * Set the chunkMetadata of this {@link SearchFilter} instance.
   *
   * @param chunkMetadata Restrict chunks considered during search to those with the given metadata.
   */
  public void setChunkMetadata(@Nullable final List<KeyValueListPair> chunkMetadata) {
    this.chunkMetadata = chunkMetadata;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link SearchFilter}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link SearchFilter} instance.
   *
   * @deprecated Use {@link #toMap()} instead.
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException("SearchFilter has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link SearchFilter} instance including unrecognized
   * properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap() {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if (id != null) declaredFields.put("id", id);
    if (collectionIds != null) declaredFields.put("collectionIds", collectionIds);
    if (_configuration != null) declaredFields.put("_configuration", _configuration);
    if (collectionMetadata != null) declaredFields.put("collectionMetadata", collectionMetadata);
    if (documentMetadata != null) declaredFields.put("documentMetadata", documentMetadata);
    if (chunkMetadata != null) declaredFields.put("chunkMetadata", chunkMetadata);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link SearchFilter} instance. If the map previously
   * contained a mapping for the key, the old value is replaced by the specified value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final SearchFilter searchFilter = (SearchFilter) o;
    return Objects.equals(this.cloudSdkCustomFields, searchFilter.cloudSdkCustomFields)
        && Objects.equals(this.id, searchFilter.id)
        && Objects.equals(this.collectionIds, searchFilter.collectionIds)
        && Objects.equals(this._configuration, searchFilter._configuration)
        && Objects.equals(this.collectionMetadata, searchFilter.collectionMetadata)
        && Objects.equals(this.documentMetadata, searchFilter.documentMetadata)
        && Objects.equals(this.chunkMetadata, searchFilter.chunkMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        id,
        collectionIds,
        _configuration,
        collectionMetadata,
        documentMetadata,
        chunkMetadata,
        cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class SearchFilter {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    collectionIds: ").append(toIndentedString(collectionIds)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("    collectionMetadata: ").append(toIndentedString(collectionMetadata)).append("\n");
    sb.append("    documentMetadata: ").append(toIndentedString(documentMetadata)).append("\n");
    sb.append("    chunkMetadata: ").append(toIndentedString(chunkMetadata)).append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create a type-safe, fluent-api builder object to construct a new {@link SearchFilter} instance
   * with all required arguments.
   */
  public static Builder create() {
    return (id) ->
        (collectionIds) ->
            (_configuration) ->
                new SearchFilter()
                    .id(id)
                    .collectionIds(collectionIds)
                    ._configuration(_configuration);
  }

  /** Builder helper class. */
  public interface Builder {
    /**
     * Set the id of this {@link SearchFilter} instance.
     *
     * @param id Identifier of this SearchFilter - unique per request.
     * @return The SearchFilter builder.
     */
    Builder1 id(@Nonnull final String id);
  }

  /** Builder helper class. */
  public interface Builder1 {
    /**
     * Set the collectionIds of this {@link SearchFilter} instance.
     *
     * @param collectionIds The collectionIds of this {@link SearchFilter}
     * @return The SearchFilter builder.
     */
    Builder2 collectionIds(@Nonnull final List<String> collectionIds);

    /**
     * Set the collectionIds of this {@link SearchFilter} instance.
     *
     * @param collectionIds The collectionIds of this {@link SearchFilter}
     * @return The SearchFilter builder.
     */
    default Builder2 collectionIds(@Nonnull final String... collectionIds) {
      return collectionIds(Arrays.asList(collectionIds));
    }
  }

  /** Builder helper class. */
  public interface Builder2 {
    /**
     * Set the _configuration of this {@link SearchFilter} instance.
     *
     * @param _configuration The _configuration of this {@link SearchFilter}
     * @return The SearchFilter instance.
     */
    SearchFilter _configuration(@Nonnull final SearchConfiguration _configuration);
  }
}
