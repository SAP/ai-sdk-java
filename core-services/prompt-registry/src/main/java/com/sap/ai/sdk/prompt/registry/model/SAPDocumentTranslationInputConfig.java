/*
 * Prompt Registry API
 * Prompt Storage service for Design time & Runtime prompt templates.
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.prompt.registry.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/** Configuration for &#x60;sap_document_translation&#x60; translation provider. */
// CHECKSTYLE:OFF
public class SAPDocumentTranslationInputConfig
// CHECKSTYLE:ON
{
  @JsonProperty("source_language")
  private String sourceLanguage;

  @JsonProperty("apply_to")
  private List<SAPDocumentTranslationApplyToSelector> applyTo = new ArrayList<>();

  @JsonProperty("target_language")
  private String targetLanguage;

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /** Default constructor for SAPDocumentTranslationInputConfig. */
  protected SAPDocumentTranslationInputConfig() {}

  /**
   * Set the sourceLanguage of this {@link SAPDocumentTranslationInputConfig} instance and return
   * the same instance.
   *
   * @param sourceLanguage Language of the text to be translated.
   * @return The same instance of this {@link SAPDocumentTranslationInputConfig} class
   */
  @Nonnull
  public SAPDocumentTranslationInputConfig sourceLanguage(@Nullable final String sourceLanguage) {
    this.sourceLanguage = sourceLanguage;
    return this;
  }

  /**
   * Language of the text to be translated.
   *
   * @return sourceLanguage The sourceLanguage of this {@link SAPDocumentTranslationInputConfig}
   *     instance.
   */
  @Nonnull
  public String getSourceLanguage() {
    return sourceLanguage;
  }

  /**
   * Set the sourceLanguage of this {@link SAPDocumentTranslationInputConfig} instance.
   *
   * @param sourceLanguage Language of the text to be translated.
   */
  public void setSourceLanguage(@Nullable final String sourceLanguage) {
    this.sourceLanguage = sourceLanguage;
  }

  /**
   * Set the applyTo of this {@link SAPDocumentTranslationInputConfig} instance and return the same
   * instance.
   *
   * @param applyTo The applyTo of this {@link SAPDocumentTranslationInputConfig}
   * @return The same instance of this {@link SAPDocumentTranslationInputConfig} class
   */
  @Nonnull
  public SAPDocumentTranslationInputConfig applyTo(
      @Nullable final List<SAPDocumentTranslationApplyToSelector> applyTo) {
    this.applyTo = applyTo;
    return this;
  }

  /**
   * Add one applyTo instance to this {@link SAPDocumentTranslationInputConfig}.
   *
   * @param applyToItem The applyTo that should be added
   * @return The same instance of type {@link SAPDocumentTranslationInputConfig}
   */
  @Nonnull
  public SAPDocumentTranslationInputConfig addApplyToItem(
      @Nonnull final SAPDocumentTranslationApplyToSelector applyToItem) {
    if (this.applyTo == null) {
      this.applyTo = new ArrayList<>();
    }
    this.applyTo.add(applyToItem);
    return this;
  }

  /**
   * Get applyTo
   *
   * @return applyTo The applyTo of this {@link SAPDocumentTranslationInputConfig} instance.
   */
  @Nonnull
  public List<SAPDocumentTranslationApplyToSelector> getApplyTo() {
    return applyTo;
  }

  /**
   * Set the applyTo of this {@link SAPDocumentTranslationInputConfig} instance.
   *
   * @param applyTo The applyTo of this {@link SAPDocumentTranslationInputConfig}
   */
  public void setApplyTo(@Nullable final List<SAPDocumentTranslationApplyToSelector> applyTo) {
    this.applyTo = applyTo;
  }

  /**
   * Set the targetLanguage of this {@link SAPDocumentTranslationInputConfig} instance and return
   * the same instance.
   *
   * @param targetLanguage Language to which the text should be translated.
   * @return The same instance of this {@link SAPDocumentTranslationInputConfig} class
   */
  @Nonnull
  public SAPDocumentTranslationInputConfig targetLanguage(@Nonnull final String targetLanguage) {
    this.targetLanguage = targetLanguage;
    return this;
  }

  /**
   * Language to which the text should be translated.
   *
   * @return targetLanguage The targetLanguage of this {@link SAPDocumentTranslationInputConfig}
   *     instance.
   */
  @Nonnull
  public String getTargetLanguage() {
    return targetLanguage;
  }

  /**
   * Set the targetLanguage of this {@link SAPDocumentTranslationInputConfig} instance.
   *
   * @param targetLanguage Language to which the text should be translated.
   */
  public void setTargetLanguage(@Nonnull final String targetLanguage) {
    this.targetLanguage = targetLanguage;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link
   * SAPDocumentTranslationInputConfig}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link SAPDocumentTranslationInputConfig}
   * instance.
   *
   * @deprecated Use {@link #toMap()} instead.
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException(
          "SAPDocumentTranslationInputConfig has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link SAPDocumentTranslationInputConfig} instance
   * including unrecognized properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap() {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if (sourceLanguage != null) declaredFields.put("sourceLanguage", sourceLanguage);
    if (applyTo != null) declaredFields.put("applyTo", applyTo);
    if (targetLanguage != null) declaredFields.put("targetLanguage", targetLanguage);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link SAPDocumentTranslationInputConfig} instance. If
   * the map previously contained a mapping for the key, the old value is replaced by the specified
   * value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final SAPDocumentTranslationInputConfig saPDocumentTranslationInputConfig =
        (SAPDocumentTranslationInputConfig) o;
    return Objects.equals(
            this.cloudSdkCustomFields, saPDocumentTranslationInputConfig.cloudSdkCustomFields)
        && Objects.equals(this.sourceLanguage, saPDocumentTranslationInputConfig.sourceLanguage)
        && Objects.equals(this.applyTo, saPDocumentTranslationInputConfig.applyTo)
        && Objects.equals(this.targetLanguage, saPDocumentTranslationInputConfig.targetLanguage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceLanguage, applyTo, targetLanguage, cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class SAPDocumentTranslationInputConfig {\n");
    sb.append("    sourceLanguage: ").append(toIndentedString(sourceLanguage)).append("\n");
    sb.append("    applyTo: ").append(toIndentedString(applyTo)).append("\n");
    sb.append("    targetLanguage: ").append(toIndentedString(targetLanguage)).append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create a type-safe, fluent-api builder object to construct a new {@link
   * SAPDocumentTranslationInputConfig} instance with all required arguments.
   */
  public static Builder create() {
    return (targetLanguage) ->
        new SAPDocumentTranslationInputConfig().targetLanguage(targetLanguage);
  }

  /** Builder helper class. */
  public interface Builder {
    /**
     * Set the targetLanguage of this {@link SAPDocumentTranslationInputConfig} instance.
     *
     * @param targetLanguage Language to which the text should be translated.
     * @return The SAPDocumentTranslationInputConfig instance.
     */
    SAPDocumentTranslationInputConfig targetLanguage(@Nonnull final String targetLanguage);
  }
}
