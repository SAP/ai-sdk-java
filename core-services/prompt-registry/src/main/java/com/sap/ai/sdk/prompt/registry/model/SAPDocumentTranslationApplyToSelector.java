/*
 * Prompt Registry API
 * Prompt Storage service for Design time & Runtime prompt templates.
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.ai.sdk.prompt.registry.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * This selector allows you to define the scope of translation, such as specific placeholders or
 * messages with specific roles. For example, &#x60;{\&quot;category\&quot;:
 * \&quot;placeholders\&quot;, \&quot;items\&quot;: [\&quot;user_input\&quot;],
 * \&quot;source_language\&quot;: \&quot;de-DE\&quot;}&#x60; targets the value of
 * \&quot;user_input\&quot; in &#x60;placeholder_values&#x60; specified in the request payload; and
 * considers the value to be in German.
 */
// CHECKSTYLE:OFF
public class SAPDocumentTranslationApplyToSelector
// CHECKSTYLE:ON
{
  /** Category to apply translation to. */
  public enum CategoryEnum {
    /** The PLACEHOLDERS option of this SAPDocumentTranslationApplyToSelector */
    PLACEHOLDERS("placeholders"),

    /** The TEMPLATE_ROLES option of this SAPDocumentTranslationApplyToSelector */
    TEMPLATE_ROLES("template_roles"),

    /** The UNKNOWN_DEFAULT_OPEN_API option of this SAPDocumentTranslationApplyToSelector */
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    CategoryEnum(String value) {
      this.value = value;
    }

    /**
     * Get the value of the enum
     *
     * @return The enum value
     */
    @JsonValue
    @Nonnull
    public String getValue() {
      return value;
    }

    /**
     * Get the String value of the enum value.
     *
     * @return The enum value as String
     */
    @Override
    @Nonnull
    public String toString() {
      return String.valueOf(value);
    }

    /**
     * Get the enum value from a String value
     *
     * @param value The String value
     * @return The enum value of type SAPDocumentTranslationApplyToSelector
     */
    @JsonCreator
    @Nonnull
    public static CategoryEnum fromValue(@Nonnull final String value) {
      for (CategoryEnum b : CategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  @JsonProperty("category")
  private CategoryEnum category;

  @JsonProperty("items")
  private List<String> items = new ArrayList<>();

  @JsonProperty("source_language")
  private String sourceLanguage;

  @JsonAnySetter @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /** Default constructor for SAPDocumentTranslationApplyToSelector. */
  protected SAPDocumentTranslationApplyToSelector() {}

  /**
   * Set the category of this {@link SAPDocumentTranslationApplyToSelector} instance and return the
   * same instance.
   *
   * @param category Category to apply translation to.
   * @return The same instance of this {@link SAPDocumentTranslationApplyToSelector} class
   */
  @Nonnull
  public SAPDocumentTranslationApplyToSelector category(@Nonnull final CategoryEnum category) {
    this.category = category;
    return this;
  }

  /**
   * Category to apply translation to.
   *
   * @return category The category of this {@link SAPDocumentTranslationApplyToSelector} instance.
   */
  @Nonnull
  public CategoryEnum getCategory() {
    return category;
  }

  /**
   * Set the category of this {@link SAPDocumentTranslationApplyToSelector} instance.
   *
   * @param category Category to apply translation to.
   */
  public void setCategory(@Nonnull final CategoryEnum category) {
    this.category = category;
  }

  /**
   * Set the items of this {@link SAPDocumentTranslationApplyToSelector} instance and return the
   * same instance.
   *
   * @param items List of placeholders or roles to apply translation to
   * @return The same instance of this {@link SAPDocumentTranslationApplyToSelector} class
   */
  @Nonnull
  public SAPDocumentTranslationApplyToSelector items(@Nonnull final List<String> items) {
    this.items = items;
    return this;
  }

  /**
   * Add one items instance to this {@link SAPDocumentTranslationApplyToSelector}.
   *
   * @param itemsItem The items that should be added
   * @return The same instance of type {@link SAPDocumentTranslationApplyToSelector}
   */
  @Nonnull
  public SAPDocumentTranslationApplyToSelector addItemsItem(@Nonnull final String itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
   * List of placeholders or roles to apply translation to
   *
   * @return items The items of this {@link SAPDocumentTranslationApplyToSelector} instance.
   */
  @Nonnull
  public List<String> getItems() {
    return items;
  }

  /**
   * Set the items of this {@link SAPDocumentTranslationApplyToSelector} instance.
   *
   * @param items List of placeholders or roles to apply translation to
   */
  public void setItems(@Nonnull final List<String> items) {
    this.items = items;
  }

  /**
   * Set the sourceLanguage of this {@link SAPDocumentTranslationApplyToSelector} instance and
   * return the same instance.
   *
   * @param sourceLanguage Language of the text to be translated.
   * @return The same instance of this {@link SAPDocumentTranslationApplyToSelector} class
   */
  @Nonnull
  public SAPDocumentTranslationApplyToSelector sourceLanguage(
      @Nullable final String sourceLanguage) {
    this.sourceLanguage = sourceLanguage;
    return this;
  }

  /**
   * Language of the text to be translated.
   *
   * @return sourceLanguage The sourceLanguage of this {@link SAPDocumentTranslationApplyToSelector}
   *     instance.
   */
  @Nonnull
  public String getSourceLanguage() {
    return sourceLanguage;
  }

  /**
   * Set the sourceLanguage of this {@link SAPDocumentTranslationApplyToSelector} instance.
   *
   * @param sourceLanguage Language of the text to be translated.
   */
  public void setSourceLanguage(@Nullable final String sourceLanguage) {
    this.sourceLanguage = sourceLanguage;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link
   * SAPDocumentTranslationApplyToSelector}.
   *
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link
   * SAPDocumentTranslationApplyToSelector} instance.
   *
   * @deprecated Use {@link #toMap()} instead.
   * @param name The name of the property
   * @return The value of the property
   * @throws NoSuchElementException If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if (!cloudSdkCustomFields.containsKey(name)) {
      throw new NoSuchElementException(
          "SAPDocumentTranslationApplyToSelector has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link SAPDocumentTranslationApplyToSelector} instance
   * including unrecognized properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap() {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if (category != null) declaredFields.put("category", category);
    if (items != null) declaredFields.put("items", items);
    if (sourceLanguage != null) declaredFields.put("sourceLanguage", sourceLanguage);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link SAPDocumentTranslationApplyToSelector} instance.
   * If the map previously contained a mapping for the key, the old value is replaced by the
   * specified value.
   *
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField(@Nonnull String customFieldName, @Nullable Object customFieldValue) {
    cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final SAPDocumentTranslationApplyToSelector saPDocumentTranslationApplyToSelector =
        (SAPDocumentTranslationApplyToSelector) o;
    return Objects.equals(
            this.cloudSdkCustomFields, saPDocumentTranslationApplyToSelector.cloudSdkCustomFields)
        && Objects.equals(this.category, saPDocumentTranslationApplyToSelector.category)
        && Objects.equals(this.items, saPDocumentTranslationApplyToSelector.items)
        && Objects.equals(
            this.sourceLanguage, saPDocumentTranslationApplyToSelector.sourceLanguage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, items, sourceLanguage, cloudSdkCustomFields);
  }

  @Override
  @Nonnull
  public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class SAPDocumentTranslationApplyToSelector {\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    sourceLanguage: ").append(toIndentedString(sourceLanguage)).append("\n");
    cloudSdkCustomFields.forEach(
        (k, v) ->
            sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Create a type-safe, fluent-api builder object to construct a new {@link
   * SAPDocumentTranslationApplyToSelector} instance with all required arguments.
   */
  public static Builder create() {
    return (category) ->
        (items) -> new SAPDocumentTranslationApplyToSelector().category(category).items(items);
  }

  /** Builder helper class. */
  public interface Builder {
    /**
     * Set the category of this {@link SAPDocumentTranslationApplyToSelector} instance.
     *
     * @param category Category to apply translation to.
     * @return The SAPDocumentTranslationApplyToSelector builder.
     */
    Builder1 category(@Nonnull final CategoryEnum category);
  }

  /** Builder helper class. */
  public interface Builder1 {
    /**
     * Set the items of this {@link SAPDocumentTranslationApplyToSelector} instance.
     *
     * @param items List of placeholders or roles to apply translation to
     * @return The SAPDocumentTranslationApplyToSelector instance.
     */
    SAPDocumentTranslationApplyToSelector items(@Nonnull final List<String> items);

    /**
     * Set the items of this {@link SAPDocumentTranslationApplyToSelector} instance.
     *
     * @param items List of placeholders or roles to apply translation to
     * @return The SAPDocumentTranslationApplyToSelector instance.
     */
    default SAPDocumentTranslationApplyToSelector items(@Nonnull final String... items) {
      return items(Arrays.asList(items));
    }
  }
}
